data.dt <- data
data.dt <- gsub("\n","",data.dt)
data.dt <- gsub("\r","",data.dt)
data.dt <- gsub("RT","",data.dt)
# 명사 분리
result_nouns <- Map(extractNoun,data.dt)
result_word <- unlist(result_nouns,use.name=F)
# 글자수가 2 이상인 것만 남김
result_word <- Filter(function(x) { nchar(x) >=2 }, result_word)
# 글자수가 과도하게 긴 것은 제외
result_word <- Filter(function(x) { nchar(x) <=10 }, result_word)
# 문자 Counting
result_word.count <- table(result_word)
# 일정 Count 이상 되는 것으로 제한
result_word.count <- result_word.count[result_word.count >= min.count]
# 폰트 세팅
windowsFonts(malgun=windowsFont("맑은 고딕"))
# Wordcloud
wordcloud(names(result_word.count),
freq=result_word.count,
scale=c(5,.5), min.freq=5, random.order=F, family="malgun", colors=pal)
}
pal <- brewer.pal(12, "Paired")
wordcloud2(result[,'message'], 2,pal)
path = "메르스"
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
path = "대통"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
path = "대통"
path = "대통령"
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
path = "대통령"
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
path = ""
path = "아"
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
?sprintf
?enc2utf8
path = enc2utf8("대통령")
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
path = enc2utf8("대통령")
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
keyword <- "대통령"
path = enc2utf8(keyword)
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
keyword <- "아이돌"
path = enc2utf8(keyword)
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
path <- gsub('"', "", path)
path
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
path <= enc2utf8(keyword)
path <- enc2utf8(keyword)
path
keyword <- "아"
path <- enc2utf8(keyword)
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
keyword <- "사람"
path <- enc2utf8(keyword)
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
keyword <- '대한민국'
result <- searchTwitter(keyword, n=2000, lang="ko")
library(ROAuth)
library(RCurl)
library(KoNLP)
library(wordcloud)
library(plyr)
library(twitteR)
library(tm)
library(Unicode)
library(httr)
result <- searchTwitter(keyword, n=2000, lang="ko")
setup_twitter_oauth(consumerKey, consumerSecret, access_token, access_tokensec)
consumerKey <- "Rbu80S62tnZKVPuGJE3CKkP8A"
consumerSecret <- "CB62bN1KanhXSuOP1ruAtSFIVKn5owg7XJc763RFmbMAX1obwe"
request <- "https://api.twitter.com/oauth/request_token"
access <- "https://api.twitter.com/oauth/access_token"
authorize <- "https://api.twitter.com/oauth/authorize"
access_token <- "183506593-souNoesasolvZUDYIJ8QkI9gjt0Va8ISKzT9tw1Y"
access_tokensec <- "4pkb709ybWtVaMX5qPGmpDeIddjCv3GpJtUbuzJFHkPP5"
setup_twitter_oauth(consumerKey, consumerSecret, access_token, access_tokensec)
keyword <- '대한민국'
result <- searchTwitter(keyword, n=2000, lang="ko")
result
result <- searchTwitter(keyword, n=2000, lang="ko")
keyword <- enc2utf8("빅데이터")
result <- searchTwitter(keyword, n=2000, lang="ko")
result
path <- enc2utf8(keyword)
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
FQLQuery.facebook <- function(script="",access_token, path) {
fromJSON(getURL(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token)))
print(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token))
}
keyword <- "사람"
path <- enc2utf8(keyword)
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
FQLQuery.facebook <- function(script="",access_token, path) {
fromJSON(getURL(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token)))
# print(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token))
}
keyword <- "사람"
path <- enc2utf8(keyword)
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
fb_oauth <- fbOAuth(app_id="1663246310561944", app_secret="3471fdded9368f291df5ccb99eef582d",extended_permissions = FALSE)
options(RCurlOptions = list(capath = system.file("CurlSSL", "cacert.pem", package = "RCurl"), ssl.verifypeer = FALSE))
FQLQuery.facebook <- function(script="",access_token, path) {
fromJSON(getURL(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token)))
# print(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token))
}
keyword <- "사람"
path <- enc2utf8(keyword)
access_token = "CAAXotrWD2JgBAHLoSloBrhnncbrgLPZBnhMPY5s7OkzFYacXraShzggacR41cSRBEX2DZBPiV7KkthbSZCjxdL4ZBuvp3Iiv7SxboFCEd0AIZCIpTJWXGwqr1x8fqHVZCASsZBpE4tSCsRvxBZCYKkYN8GgDkQ6QfMedPbNQe9BQeVn1rZCvMQNeYmjdJqm8BG5sm1nL9Cs75yk9lCB0NF9TC8yerdPKx0NUZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
library(Rfacebook)
library(Rook)
library(RCurl)
library(tm)
fb_oauth <- fbOAuth(app_id="1663246310561944", app_secret="3471fdded9368f291df5ccb99eef582d",extended_permissions = FALSE)
options(RCurlOptions = list(capath = system.file("CurlSSL", "cacert.pem", package = "RCurl"), ssl.verifypeer = FALSE))
access_token = "CAACEdEose0cBAKjU5OpHXthtyiH7znRGmtIUaICpHw6LIlrh37vZAHdJCfwb4X4CZC4XhndXTMhrZBASqfFVJBSqR4kdfxb4IGatMGxuXBju2rg2kLZC0JoDxsinEwwqfouTRBMvZBWXO1zgNmgEjZBwHcxIqtfIuZCILTd4bb02I22ZCwwJkPr5c5U2HNyONNCur1EYquZBdfADOVFpVbM9LiCryfhfug94ZD"
FQLQuery.facebook <- function(script="",access_token, path) {
fromJSON(getURL(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token)))
# print(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token))
}
path <- enc2utf8(keyword)
keyword <- "사람"
path <- enc2utf8(keyword)
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
?strsplit
keyword <- "사람"
keyword <- strsplit(keyword, "\\\r\\\n")
path <- enc2utf8(keyword)
keyword
keywd <- unlist(keyword)
keywd
path <- enc2utf8(keywd)
access_token = "CAACEdEose0cBAKjU5OpHXthtyiH7znRGmtIUaICpHw6LIlrh37vZAHdJCfwb4X4CZC4XhndXTMhrZBASqfFVJBSqR4kdfxb4IGatMGxuXBju2rg2kLZC0JoDxsinEwwqfouTRBMvZBWXO1zgNmgEjZBwHcxIqtfIuZCILTd4bb02I22ZCwwJkPr5c5U2HNyONNCur1EYquZBdfADOVFpVbM9LiCryfhfug94ZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
Sys.getlocale()
Sys.setlocale(locale="C")
Sys.getlocale()
keyword <- "사람"
keyword <- strsplit(keyword, "\\\r\\\n")
keywd <- unlist(keyword)
path <- enc2utf8(keywd)
access_token = "CAACEdEose0cBAKjU5OpHXthtyiH7znRGmtIUaICpHw6LIlrh37vZAHdJCfwb4X4CZC4XhndXTMhrZBASqfFVJBSqR4kdfxb4IGatMGxuXBju2rg2kLZC0JoDxsinEwwqfouTRBMvZBWXO1zgNmgEjZBwHcxIqtfIuZCILTd4bb02I22ZCwwJkPr5c5U2HNyONNCur1EYquZBdfADOVFpVbM9LiCryfhfug94ZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
keyword <- "빅데이터"
keyword <- strsplit(keyword, "\\\r\\\n")
keywd <- unlist(keyword)
path <- enc2utf8(keywd)
Sys.setlocale(locale="C")
access_token = "CAACEdEose0cBAKjU5OpHXthtyiH7znRGmtIUaICpHw6LIlrh37vZAHdJCfwb4X4CZC4XhndXTMhrZBASqfFVJBSqR4kdfxb4IGatMGxuXBju2rg2kLZC0JoDxsinEwwqfouTRBMvZBWXO1zgNmgEjZBwHcxIqtfIuZCILTd4bb02I22ZCwwJkPr5c5U2HNyONNCur1EYquZBdfADOVFpVbM9LiCryfhfug94ZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
path <- enc2utf8(keyword)
keyword <- "빅데이터"
path <- enc2utf8(keyword)
access_token = "CAACEdEose0cBAKjU5OpHXthtyiH7znRGmtIUaICpHw6LIlrh37vZAHdJCfwb4X4CZC4XhndXTMhrZBASqfFVJBSqR4kdfxb4IGatMGxuXBju2rg2kLZC0JoDxsinEwwqfouTRBMvZBWXO1zgNmgEjZBwHcxIqtfIuZCILTd4bb02I22ZCwwJkPr5c5U2HNyONNCur1EYquZBdfADOVFpVbM9LiCryfhfug94ZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
keyword <- "golf"
path <- enc2utf8(keyword)
access_token = "CAACEdEose0cBAKjU5OpHXthtyiH7znRGmtIUaICpHw6LIlrh37vZAHdJCfwb4X4CZC4XhndXTMhrZBASqfFVJBSqR4kdfxb4IGatMGxuXBju2rg2kLZC0JoDxsinEwwqfouTRBMvZBWXO1zgNmgEjZBwHcxIqtfIuZCILTd4bb02I22ZCwwJkPr5c5U2HNyONNCur1EYquZBdfADOVFpVbM9LiCryfhfug94ZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
keyword <- "golzonf"
keyword <- "golfzon"
path <- enc2utf8(keyword)
access_token = "CAACEdEose0cBAKjU5OpHXthtyiH7znRGmtIUaICpHw6LIlrh37vZAHdJCfwb4X4CZC4XhndXTMhrZBASqfFVJBSqR4kdfxb4IGatMGxuXBju2rg2kLZC0JoDxsinEwwqfouTRBMvZBWXO1zgNmgEjZBwHcxIqtfIuZCILTd4bb02I22ZCwwJkPr5c5U2HNyONNCur1EYquZBdfADOVFpVbM9LiCryfhfug94ZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
keyword <- "빅"
path <- enc2utf8(keyword)
access_token = "CAACEdEose0cBAKjU5OpHXthtyiH7znRGmtIUaICpHw6LIlrh37vZAHdJCfwb4X4CZC4XhndXTMhrZBASqfFVJBSqR4kdfxb4IGatMGxuXBju2rg2kLZC0JoDxsinEwwqfouTRBMvZBWXO1zgNmgEjZBwHcxIqtfIuZCILTd4bb02I22ZCwwJkPr5c5U2HNyONNCur1EYquZBdfADOVFpVbM9LiCryfhfug94ZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
FQLQuery.facebook <- function(script="",access_token, path) {
fromJSON(getURL(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token)))
print(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token))
}
keyword <- "빅"
path <- enc2utf8(keyword)
access_token = "CAACEdEose0cBAKjU5OpHXthtyiH7znRGmtIUaICpHw6LIlrh37vZAHdJCfwb4X4CZC4XhndXTMhrZBASqfFVJBSqR4kdfxb4IGatMGxuXBju2rg2kLZC0JoDxsinEwwqfouTRBMvZBWXO1zgNmgEjZBwHcxIqtfIuZCILTd4bb02I22ZCwwJkPr5c5U2HNyONNCur1EYquZBdfADOVFpVbM9LiCryfhfug94ZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
keyword <- "golfzon"
path <- enc2utf8(keyword)
access_token = "CAACEdEose0cBAKjU5OpHXthtyiH7znRGmtIUaICpHw6LIlrh37vZAHdJCfwb4X4CZC4XhndXTMhrZBASqfFVJBSqR4kdfxb4IGatMGxuXBju2rg2kLZC0JoDxsinEwwqfouTRBMvZBWXO1zgNmgEjZBwHcxIqtfIuZCILTd4bb02I22ZCwwJkPr5c5U2HNyONNCur1EYquZBdfADOVFpVbM9LiCryfhfug94ZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
keyword <- "big data"
path <- enc2utf8(keyword)
access_token = "CAACEdEose0cBAKjU5OpHXthtyiH7znRGmtIUaICpHw6LIlrh37vZAHdJCfwb4X4CZC4XhndXTMhrZBASqfFVJBSqR4kdfxb4IGatMGxuXBju2rg2kLZC0JoDxsinEwwqfouTRBMvZBWXO1zgNmgEjZBwHcxIqtfIuZCILTd4bb02I22ZCwwJkPr5c5U2HNyONNCur1EYquZBdfADOVFpVbM9LiCryfhfug94ZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
keyword <- "bigdata"
path <- enc2utf8(keyword)
access_token = "CAACEdEose0cBAKjU5OpHXthtyiH7znRGmtIUaICpHw6LIlrh37vZAHdJCfwb4X4CZC4XhndXTMhrZBASqfFVJBSqR4kdfxb4IGatMGxuXBju2rg2kLZC0JoDxsinEwwqfouTRBMvZBWXO1zgNmgEjZBwHcxIqtfIuZCILTd4bb02I22ZCwwJkPr5c5U2HNyONNCur1EYquZBdfADOVFpVbM9LiCryfhfug94ZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
head(myposts)
post.id  <- sapply(myposts$posts$data, function(x) x$id)
post.messages <- sapply(myposts$posts$data, function(x) x$message)
head(myposts)
FQLQuery.facebook <- function(script="",access_token, path) {
fromJSON(getURL(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token)))
# print(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token))
}
access_token = "CAACEdEose0cBAKjU5OpHXthtyiH7znRGmtIUaICpHw6LIlrh37vZAHdJCfwb4X4CZC4XhndXTMhrZBASqfFVJBSqR4kdfxb4IGatMGxuXBju2rg2kLZC0JoDxsinEwwqfouTRBMvZBWXO1zgNmgEjZBwHcxIqtfIuZCILTd4bb02I22ZCwwJkPr5c5U2HNyONNCur1EYquZBdfADOVFpVbM9LiCryfhfug94ZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
post.id  <- sapply(myposts$posts$data, function(x) x$id)
post.messages <- sapply(myposts$posts$data, function(x) x$message)
post.messages <- gsub("\n","",post.messages)
post.messages <- gsub("\r","",post.messages)
post.messages <- removePunctuation(post.messages)
result <- data.frame(post.id = post.id,message = post.messages)
head(result)
wordcloud2 <- function (data, min.count, pal) {
# text mining을 위한 형태로 정제
data.dt <- data
data.dt <- gsub("\n","",data.dt)
data.dt <- gsub("\r","",data.dt)
data.dt <- gsub("RT","",data.dt)
# 명사 분리
result_nouns <- Map(extractNoun,data.dt)
result_word <- unlist(result_nouns,use.name=F)
# 글자수가 2 이상인 것만 남김
result_word <- Filter(function(x) { nchar(x) >=2 }, result_word)
# 글자수가 과도하게 긴 것은 제외
result_word <- Filter(function(x) { nchar(x) <=10 }, result_word)
# 문자 Counting
result_word.count <- table(result_word)
# 일정 Count 이상 되는 것으로 제한
result_word.count <- result_word.count[result_word.count >= min.count]
# 폰트 세팅
windowsFonts(malgun=windowsFont("맑은 고딕"))
# Wordcloud
wordcloud(names(result_word.count),
freq=result_word.count,
scale=c(5,.5), min.freq=5, random.order=F, family="malgun", colors=pal)
}
pal <- brewer.pal(12, "Paired")
wordcloud2(result[,'message'], 2,pal)
post.likes <- sapply(myposts$posts$data, function(x) x$likes$count)
post.createdtime <- sapply(myposts$post$data, function(x) x$created_time)
post.likes
library(Rfacebook)
library(Rook)
library(RCurl)
library(tm)
fb_oauth <- fbOAuth(app_id="1663246310561944", app_secret="3471fdded9368f291df5ccb99eef582d",extended_permissions = FALSE)
options(RCurlOptions = list(capath = system.file("CurlSSL", "cacert.pem", package = "RCurl"), ssl.verifypeer = FALSE))
FQLQuery.facebook <- function(script="",access_token, path) {
fromJSON(getURL(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token)))
# print(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token))
}
keyword <- "bigdata"
path <- enc2utf8(keyword)
access_token = "CAACEdEose0cBAKjU5OpHXthtyiH7znRGmtIUaICpHw6LIlrh37vZAHdJCfwb4X4CZC4XhndXTMhrZBASqfFVJBSqR4kdfxb4IGatMGxuXBju2rg2kLZC0JoDxsinEwwqfouTRBMvZBWXO1zgNmgEjZBwHcxIqtfIuZCILTd4bb02I22ZCwwJkPr5c5U2HNyONNCur1EYquZBdfADOVFpVbM9LiCryfhfug94ZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
access_token = "CAAXotrWD2JgBAFX1de1fIDHBVntQkH9mPQn10haNTobNH0At5ZAfyLB5GaZA7tIK6EKXZC2UCzc384cZCtiX8qJ5WZCykeiJ9WIXltUfa0KcqE15hSsxvIvRf68xIo5ZC7keC7G3ApZAZAZCnvtL9xBSibzziRylcxbJ5XRbufVkHpSy2ebWoIuDWZBVm2SAU81QZBcUJRdCCrnMINRoi5AwNNuxjvYu4bKocoZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
post.id  <- sapply(myposts$posts$data, function(x) x$id)
post.messages <- sapply(myposts$posts$data, function(x) x$message)
post.likes <- sapply(myposts$posts$data, function(x) x$likes$count)
post.createdtime <- sapply(myposts$post$data, function(x) x$created_time)
post.createdtime
post.likes
post.messages <- gsub("\n","",post.messages)
post.messages <- gsub("\r","",post.messages)
post.messages <- removePunctuation(post.messages)
result <- data.frame(post.id = post.id,message = post.messages)
library(KoNLP)
library(wordcloud)
wordcloud2 <- function (data, min.count, pal) {
data.dt <- data
data.dt <- gsub("\n","",data.dt)
data.dt <- gsub("\r","",data.dt)
data.dt <- gsub("RT","",data.dt)
# 명사 분리
result_nouns <- Map(extractNoun,data.dt)
result_word <- unlist(result_nouns,use.name=F)
# 글자수가 2 이상인 것만 남김
result_word <- Filter(function(x) { nchar(x) >=2 }, result_word)
# 글자수가 과도하게 긴 것은 제외
result_word <- Filter(function(x) { nchar(x) <=10 }, result_word)
# 문자 Counting
result_word.count <- table(result_word)
# 일정 Count 이상 되는 것으로 제한
result_word.count <- result_word.count[result_word.count >= min.count]
# 폰트 세팅
windowsFonts(malgun=windowsFont("맑은 고딕"))
# Wordcloud
wordcloud(names(result_word.count),
freq=result_word.count,
scale=c(5,.5), min.freq=5, random.order=F, family="malgun", colors=pal)
}
pal <- brewer.pal(12, "Paired")
wordcloud2(result[,'message'], 2,pal)
rm(list=ls())
consumerKey <- "Rbu80S62tnZKVPuGJE3CKkP8A"
consumerSecret <- "CB62bN1KanhXSuOP1ruAtSFIVKn5owg7XJc763RFmbMAX1obwe"
request <- "https://api.twitter.com/oauth/request_token"
access <- "https://api.twitter.com/oauth/access_token"
authorize <- "https://api.twitter.com/oauth/authorize"
access_token <- "183506593-souNoesasolvZUDYIJ8QkI9gjt0Va8ISKzT9tw1Y"
access_tokensec <- "4pkb709ybWtVaMX5qPGmpDeIddjCv3GpJtUbuzJFHkPP5"
consumerKey <- "Rbu80S62tnZKVPuGJE3CKkP8A"
consumerSecret <- "CB62bN1KanhXSuOP1ruAtSFIVKn5owg7XJc763RFmbMAX1obwe"
request <- "https://api.twitter.com/oauth/request_token"
access <- "https://api.twitter.com/oauth/access_token"
authorize <- "https://api.twitter.com/oauth/authorize"
access_token <- "183506593-souNoesasolvZUDYIJ8QkI9gjt0Va8ISKzT9tw1Y"
access_tokensec <- "4pkb709ybWtVaMX5qPGmpDeIddjCv3GpJtUbuzJFHkPP5"
setup_twitter_oauth(consumerKey, consumerSecret, access_token, access_tokensec)
library(ROAuth)
library(RCurl)
library(KoNLP)
library(wordcloud)
library(plyr)
library(twitteR)
library(tm)
library(Unicode)
library(httr)
setup_twitter_oauth(consumerKey, consumerSecret, access_token, access_tokensec)
setup_twitter_oauth(consumerKey, consumerSecret, access_token, access_tokensec)
keyword <- enc2utf8("빅데이터")
result <- searchTwitter(keyword, n=2000, lang="ko")
result
result.df <- twListToDF(result)
result.df
result.text <- result.df$text
result.text
result.text <- gsub('\n', '', result.text)
result.text <- gsub('\r', '', result.text)
result.text <- gsub('RT', '', result.text)
result.text <- gsub('http', '', result.text)
result_nouns <- Map(extractNoun, result.text)
result_wordsvec <- unlist(result_nouns,use.name=F)
result_wordsvec <- result_wordsvec[-which(result_wordsvec %in% stopwords("english"))]
result_wordsvec <- gsub('[[:punct:]]','', result_wordsvec)
result_wordsvec <- Filter(function(x) { nchar(x) >= 2}, result_wordsvec)
result_wordcount <- table(result_wordsvec)
pal <- brewer.pal(12,'Paired')
windowsFonts(malgun=windowsFont('맑은 고딕'))
result_wordcount
wordcloud(names(result_wordcount), freq=result_wordcount, scale=c(5,0,5), min.freq=5, random.order=F, rot.per=.1, colors=pal, family='malgun')
wordcloud(names(result_wordcount), freq=result_wordcount, scale=c(10,0,10), min.freq=5, random.order=T, rot.per=.1, colors=pal, family='malgun')
wordcloud(names(result_wordcount), freq=result_wordcount, scale=c(10,0,10), min.freq=5, random.order=F, rot.per=.1, colors=pal, family='malgun')
wordcloud(names(result_wordcount), freq=result_wordcount, scale=c(5,0,10), min.freq=5, random.order=F, rot.per=.1, colors=pal, family='malgun')
vignette(wordcloud)
vignette(wordcloud)
example("vignette")
?vignette
vignette(package="wordcloud")
vignette(package="wordcloud")
vignette(package="wordcloud")
vignette(package="wordcloud")
vignette(package="twitteR")
keyword <- enc2utf8("K2")
result <- searchTwitter(keyword, n=2000, lang="ko")
result
result.df <- twListToDF(result)
result.df
result.text <- result.df$text
result.text
keyword <- enc2utf8("아이더")
keyword <- enc2utf8("FLYWALK")
result <- searchTwitter(keyword, n=2000, lang="ko")
result
keyword <- enc2utf8("플라이워크")
result <- searchTwitter(keyword, n=2000, lang="ko")
result
result.df <- twListToDF(result)
result.df
keyword <- enc2utf8("등산")
keyword <- enc2utf8("등산화")
result <- searchTwitter(keyword, n=2000, lang="ko")
result
result.df <- twListToDF(result)
result.df
result.text <- result.df$text
result.text
result.text <- gsub('\n', '', result.text)
result.text <- gsub('\r', '', result.text)
result.text <- gsub('RT', '', result.text)
result.text <- gsub('http', '', result.text)
result_nouns <- Map(extractNoun, result.text)
result_nouns
result_wordsvec <- unlist(result_nouns,use.name=F)
result_wordsvec <- result_wordsvec[-which(result_wordsvec %in% stopwords("english"))]
result_wordsvec <- gsub('[[:punct:]]','', result_wordsvec)
result_wordsvec <- Filter(function(x) { nchar(x) >= 2}, result_wordsvec)
result_wordcount <- table(result_wordsvec)
result_wordcount
result_wordsvec <- gsub('[[:punct:]]','', result_wordsvec)
result_wordsvec <- Filter(function(x) { nchar(x) >= 2}, result_wordsvec)
result_wordcount <- table(result_wordsvec)
result_wordcount
keyword <- "등산화"
path <- enc2utf8(keyword)
access_token = "CAAXotrWD2JgBAFX1de1fIDHBVntQkH9mPQn10haNTobNH0At5ZAfyLB5GaZA7tIK6EKXZC2UCzc384cZCtiX8qJ5WZCykeiJ9WIXltUfa0KcqE15hSsxvIvRf68xIo5ZC7keC7G3ApZAZAZCnvtL9xBSibzziRylcxbJ5XRbufVkHpSy2ebWoIuDWZBVm2SAU81QZBcUJRdCCrnMINRoi5AwNNuxjvYu4bKocoZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
library(Rfacebook)
library(Rook)
library(RCurl)
library(tm)
fb_oauth <- fbOAuth(app_id="1663246310561944", app_secret="3471fdded9368f291df5ccb99eef582d",extended_permissions = FALSE)
options(RCurlOptions = list(capath = system.file("CurlSSL", "cacert.pem", package = "RCurl"), ssl.verifypeer = FALSE))
FQLQuery.facebook <- function(script="",access_token, path) {
fromJSON(getURL(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token)))
# print(sprintf( "https://graph.facebook.com/%s?%s&access_token=%s", path, script, access_token))
}
keyword <- "등산화"
path <- enc2utf8(keyword)
access_token = "CAAXotrWD2JgBAFX1de1fIDHBVntQkH9mPQn10haNTobNH0At5ZAfyLB5GaZA7tIK6EKXZC2UCzc384cZCtiX8qJ5WZCykeiJ9WIXltUfa0KcqE15hSsxvIvRf68xIo5ZC7keC7G3ApZAZAZCnvtL9xBSibzziRylcxbJ5XRbufVkHpSy2ebWoIuDWZBVm2SAU81QZBcUJRdCCrnMINRoi5AwNNuxjvYu4bKocoZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
access_token = "CAACEdEose0cBAB1BWWZBkrfVQkH6JurRGsS8LF0z3uocfKZCX3eFOZABHZA3LXaamrhHes6GqjXViXZB3oJ5tkoi7SZCSDdpbFeiGXM2PU85KyDrcJn1lJePtPPtKQsOG0ZCJZCac5pbzY1jrGKEOyoCpG9xKN9ZCYrZAkzVvM0ZCTTbZBiHrLPp6VWMy0TFZAiQ6LQjfJxasqmlRZBgqm0EQH6BZB7dTh4ifRRcRsZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
keyword <- "flywalk"
path <- enc2utf8(keyword)
access_token = "CAACEdEose0cBAB1BWWZBkrfVQkH6JurRGsS8LF0z3uocfKZCX3eFOZABHZA3LXaamrhHes6GqjXViXZB3oJ5tkoi7SZCSDdpbFeiGXM2PU85KyDrcJn1lJePtPPtKQsOG0ZCJZCac5pbzY1jrGKEOyoCpG9xKN9ZCYrZAkzVvM0ZCTTbZBiHrLPp6VWMy0TFZAiQ6LQjfJxasqmlRZBgqm0EQH6BZB7dTh4ifRRcRsZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
keyword <- "bigdata"
path <- enc2utf8(keyword)
access_token = "CAACEdEose0cBAB1BWWZBkrfVQkH6JurRGsS8LF0z3uocfKZCX3eFOZABHZA3LXaamrhHes6GqjXViXZB3oJ5tkoi7SZCSDdpbFeiGXM2PU85KyDrcJn1lJePtPPtKQsOG0ZCJZCac5pbzY1jrGKEOyoCpG9xKN9ZCYrZAkzVvM0ZCTTbZBiHrLPp6VWMy0TFZAiQ6LQjfJxasqmlRZBgqm0EQH6BZB7dTh4ifRRcRsZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
head(myposts)
post.id  <- sapply(myposts$posts$data, function(x) x$id)
post.messages <- sapply(myposts$posts$data, function(x) x$message)
post.messages <- gsub("\n","",post.messages)
post.messages <- gsub("\r","",post.messages)
post.messages <- removePunctuation(post.messages)
result <- data.frame(post.id = post.id,message = post.messages)
head(result)
wordcloud2 <- function (data, min.count, pal) {
# text mining을 위한 형태로 정제
data.dt <- data
data.dt <- gsub("\n","",data.dt)
data.dt <- gsub("\r","",data.dt)
data.dt <- gsub("RT","",data.dt)
# 명사 분리
result_nouns <- Map(extractNoun,data.dt)
result_word <- unlist(result_nouns,use.name=F)
# 글자수가 2 이상인 것만 남김
result_word <- Filter(function(x) { nchar(x) >=2 }, result_word)
# 글자수가 과도하게 긴 것은 제외
result_word <- Filter(function(x) { nchar(x) <=10 }, result_word)
# 문자 Counting
result_word.count <- table(result_word)
# 일정 Count 이상 되는 것으로 제한
result_word.count <- result_word.count[result_word.count >= min.count]
# 폰트 세팅
windowsFonts(malgun=windowsFont("맑은 고딕"))
# Wordcloud
wordcloud(names(result_word.count),
freq=result_word.count,
scale=c(5,.5), min.freq=5, random.order=F, family="malgun", colors=pal)
}
pal <- brewer.pal(12, "Paired")
wordcloud2(result[,'message'], 2,pal)
keyword <- "iPhone"
path <- enc2utf8(keyword)
access_token = "CAACEdEose0cBAB1BWWZBkrfVQkH6JurRGsS8LF0z3uocfKZCX3eFOZABHZA3LXaamrhHes6GqjXViXZB3oJ5tkoi7SZCSDdpbFeiGXM2PU85KyDrcJn1lJePtPPtKQsOG0ZCJZCac5pbzY1jrGKEOyoCpG9xKN9ZCYrZAkzVvM0ZCTTbZBiHrLPp6VWMy0TFZAiQ6LQjfJxasqmlRZBgqm0EQH6BZB7dTh4ifRRcRsZD"
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
post.id  <- sapply(myposts$posts$data, function(x) x$id)
post.messages <- sapply(myposts$posts$data, function(x) x$message)
myposts <- FQLQuery.facebook("fields=posts.fields(message,likes)&limit=100&offset=0", access_token, path)
head(myposts)
keyword <- "iPhone"
path <- enc2utf8(keyword)
