trainData$dateChar <- strptime(trainData$dateChar, format="%Y/%m%d")
library(dplyr)
library(reshape)
library(jpeg)
trainData <- read.csv("trainData.csv")
mtrushBMP <- readJPEG("finalreport.jpg")
for (x in 1:dim(mtrushBMP)[1]) {
if ((x %% 100 == 0) || (x %% 101 == 0) || (x %% 102 == 0) || (x %% 103 == 0)) {
mtrushBMP[x,,1] <- 1
mtrushBMP[x,,2] <- 1
mtrushBMP[x,,3] <- 1
}
}
for (y in 1:dim(mtrushBMP)[2]) {
if ((y %% 100 == 0) || (y %% 101 == 0) || (y %% 102 == 0) || (y %% 103 == 0)) {
mtrushBMP[,y,1] <- 1
mtrushBMP[,y,2] <- 1
mtrushBMP[,y,3] <- 1
}
}
writeJPEG(mtrushBMP,target="finalreport_whiteline.jpg")
loyalCustomGroup <- group_by(trainData, touristID)
loyalCustomSummary <- summarize(loyalCustomGroup, CallCount = length(dateChar))
loyalCustomer <- arrange(loyalCustomSummary, desc(CallCount))
loyalCustomer
TopVisitGroup <- group_by(trainData,  nation)
TopVisitSummary <- summarize(TopVisitGroup, visitCount = length(dateChar))
TopVisitNation <- arrange(TopVisitSummary, desc(visitCount))
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
install.packages("jpeg")
trainData$dateChar <- strptime(trainData$dateChar, format="%Y/%m%d")
head(trainData)
trainData <- read.csv("trainData.csv")
head(trainData)
loyalCustomGroup <- group_by(trainData, touristID)
loyalCustomSummary <- summarize(loyalCustomGroup, CallCount = length(dateChar))
head(loyalCustomSummary)
loyalCustomer <- arrange(loyalCustomSummary, desc(CallCount))
head(loyalCustomer)
TopVisitGroup <- group_by(trainData,  nation)
TopVisitSummary <- summarize(TopVisitGroup, visitCount = length(dateChar))
head(TopVisitSummary)
TopVisitNation <- arrange(TopVisitSummary, desc(visitCount))
head(TopVisitNation)
visitDiff <- TopVisitNation[1,2] - TopVisitNation[3,2]
visitDiff  ## 83403
trainData$Timestamp <- strptime(paste0(trainData$dateChar," ", trainData$timeChar), format="%Y/%m%d %H%M-%S")
trainData$hour <- trainData$Timestamp$hour
trainData$wday <- trainData$Timestamp$wday
trainData$wday <- factor(trainData$wday, levels=c(1:6,0), ordered=T, labels=c("월","화","수","목","금","토","일"))
trainData$Timestamp <- as.character(trainData$Timestamp)
timeGroup <- group_by(trainData,  hour)
head(as.data.frame(timeGroup))
timeGroupSummary <- summarize(timeGroup, timeCount = length(touristID))
head(timeGroupSummary)
MaxTimeRange <- arrange(timeGroupSummary, desc(timeCount))
head(MaxTimeRange)
MaxDaycountGroup <- group_by(trainData, wday)
head(MaxDaycountGroup)
MaxDaycountSummary <- summarize(MaxDaycountGroup, wdayCount = length(touristID))
MaxDayCount <- arrange(MaxDaycountSummary, desc(wdayCount))
head(MaxDayCount)
WeekDayCallCountGroup <- group_by(trainData, touristID, wday)
weekDayCallCountSummary <- summarize(WeekDayCallCountGroup, Count=length(wday))
weekDayCallCountCast <- cast(weekDayCallCountSummary, touristID ~ wday, value="Count", fun.aggregate=sum)
head(weekDayCallCountCast)
weekDayCallCountCast$weekdayCall <- apply(weekDayCallCountCast[,2:6],1,sum)
weekDayCallCountCast$weekendCall <- apply(weekDayCallCountCast[,7:8],1,sum)
head(weekDayCallCountCast)
NationRateGroup <- group_by(trainData, city, nation)
NationRateSummary <- summarize(NationRateGroup, nationCnt = length(nation))
NationRateCast <- cast(NationRateSummary, city ~ nation, value="nationCnt", fun.aggregate= sum)
NationRateCast$sum <- apply(NationRateCast[,2:11],1,sum)
NationRateCastPercent <- data.frame(city=NationRateCast$city, NationRateCast[,2:11]/NationRateCast$sum)
head(NationRateCastPercent)
trainData$dateChar
strptime(trainData$dateChar, format="%Y/%m%d")
trainData$dateChar <- strptime(trainData$dateChar, format="%Y/%m%d")
head(trainData)
trainData$dateChar <- as.character(trainData$dateChar)
trainData$dateChar
trainData$dateChar <- gsub("-", "", trainData$dateChar)
trainData$dateChar
trainData$dateChar <- as.numeric(trainData$dateChar)
lengthOfVisitGroup <- group_by(trainData, touristID)
lengthOfVisitSummary <- summarize(lengthOfVisitGroup, maxRecency=max(dateChar), minRecency=min(dateChar), count = sum(touristID), period = max(dateChar) - min(dateChar))
head(lenghOfVisitSummary)
head(lengthOfVisitSummary)
lengthOfVisitSummary$maxDate <- as.Date(as.character(lengthOfVisitSummary$maxRecency), format="%Y%m%d")
lengthOfVisitSummary$maxDate
lengthOfVisitSummary$minDate <- as.Date(as.character(lengthOfVisitSummary$minRecency), format="%Y%m%d")
lengthOfVisitSummary$minDate
head(lengthOfVisitSummary)
lengthOfVisitSummary$lengthOfVisitCnt <- lengthOfVisitSummary$maxDate
lengthOfVisitSummary$lengthOfVisitCnt <- lengthOfVisitSummary$maxDate - lengthOfVisitSummary$minDate
lengthOfVisitSummary$lengthOfVisitCnt
head(lengthOfVisitSummary)
lengthOfVisitSummary$lengthOfVisitCnt/7
head(lengthOfVisitSummary$lengthOfVisitCnt/7)
lengthOfVisitSummary$lengthOfVisitCnt <- (lengthOfVisitSummary$maxDate - lengthOfVisitSummary$minDate)/7
lengthOfVisitSummary$lengthOfVisitCnt <- (lengthOfVisitSummary$maxDate - lengthOfVisitSummary$minDate)/7
head(lengthOfVisitSummary)
round((lengthOfVisitSummary$maxDate - lengthOfVisitSummary$minDate)/7,1)
round((lengthOfVisitSummary$maxDate - lengthOfVisitSummary$minDate)/7,0)
lengthOfVisitSummary$lengthOfVisitCnt <- round((lengthOfVisitSummary$maxDate - lengthOfVisitSummary$minDate)/7,0)
head(lengthOfVisitSummary)
lengthOfVisitSummary$lengthOfVisitCnt <- round((lengthOfVisitSummary$maxDate - lengthOfVisitSummary$minDate)/7,1)
lengthOfVisitSummary$lengthOfVisitCnt
head(lengthOfVisitSummary)
(lengthOfVisitSummary$maxDate - lengthOfVisitSummary$minDate)/7
head((lengthOfVisitSummary$maxDate - lengthOfVisitSummary$minDate)/7)
head(lengthOfVisitSummary)
lengthOfVisitSummary$lengthOfVisitCnt <- round((lengthOfVisitSummary$maxDate - lengthOfVisitSummary$minDate)/7,1)
head(lengthOfVisitSummary)
lengthOfVisitSummary$lengthOfVisitCnt <- round((lengthOfVisitSummary$maxDate - lengthOfVisitSummary$minDate)/7,0)
head(lengthOfVisitSummary)
head(summarize(lengthOfVisitSummary, touristID, lengthOfVisitCnt))
group_by(lengthOfVisitSummary, touristID, lengthOfVisitCnt)
testgroup <- group_by(lengthOfVisitSummary, touristID, lengthOfVisitCnt)
head(summarize(testgroup, touristID, lengthOfVisitCnt))
testgroup <- group_by(lengthOfVisitSummary, touristID, lengthOfVisitCnt)
summarize(testgroup, touristID, lengthOfVisitCnt)
testgroup
head(summarize(testgroup, touristID, lengthOfVisitCnt, cnt = length(touristID)))
library(plyr)
head(NationRateCastPercent)
head(trainData)
head(join(trainData, lengthOfVisitSummary, type="inner"))
summarize(lengthOfVisitSummary, N=n())
summarize(lengthOfVisitSummary, touristID, lengthOfvisitSummary, N=n())
summarize(lengthOfVisitSummary, touristID, lengthOfVisitSummary, N=n())
summarize(lengthOfVisitSummary, touristID, lengthOfVisitSummary, count=length(touristID))
summarize(lengthOfVisitSummary, touristID, lengthOfVisitSummary, count=length(touristID))
summarize(lengthOfVisitSummary, touristID, lengthOfVisitSummary, count=sum(touristID))
summarize(lengthOfVisitSummary, touristID, lengthOfVisitSummary)
head(summarize(lengthOfVisitSummary, touristID, lengthOfVisitSummary))
head(summarize(lengthOfVisitSummary, touristID, lengthOfVisitCnt))
LengthOfVisitSum <- head(summarize(lengthOfVisitSummary, touristID, lengthOfVisitCnt))
LengthOfVisitSum
head(join(trainData, LengthOfVisitSum, type="inner"))
head(merge(trainData, LengthOfVisitSum, "touristID" ))
head(merge(trainData, LengthOfVisitSum, c("touristID", "dateChar" ))
_
head(merge(trainData, LengthOfVisitSum, c("touristID", "dateChar" )))
head(merge(trainData, LengthOfVisitSum, c("touristID", "dateChar")))
head(merge(trainData, LengthOfVisitSum, c("touristID", "timeChar")))
head(merge(trainData, LengthOfVisitSum, c("touristID")))
?merge
head(merge(trainData, LengthOfVisitSum, by.x = "touristID", by.y = "lengthOfVisitCnt"))
head(merge(trainData, LengthOfVisitSum,  by.y = "lengthOfVisitCnt"))
head(merge(trainData, LengthOfVisitSum,  by = "lengthOfVisitCnt"))
LengthOfVisitSum
head(merge(trainData, LengthOfVisitSum,  by = "touristID"))
head(merge(trainData, LengthOfVisitSum,  by = "dateChar"))
mergeData <- merge(trainData, LengthOfVisitSum,  by = "dateChar"))
mergeData <- merge(trainData, LengthOfVisitSum,  by = "dateChar")
mergeData <- merge(trainData, LengthOfVisitSum,  by = "touristID")
mergeData
head(mergeData)
col_idx <- grep("lengthOfVisitCnt", names(mergeData))
col_idx
head(mergeData[, c(col_idx, (1:ncol(mergeData))[-col_idx])])
head(mergeData[, c(col_idx, (1:ncol(mergeData))[-col_idx+1])])
head(mergeData[, c(col_idx-1, (1:ncol(mergeData))[-col_idx])])
head(mergeData[, c(col_idx, (1:ncol(mergeData)-1)[-col_idx])])
ncol(mergeData)
head(mergeData[, c(ncol(mergeData) - (col_idx-1), (1:ncol(mergeData))[-col_idx])])
head(mergeData[, c(ncol(mergeData) - (col_idx-1), (1:ncol(mergeData))[-col_idx]+1)])
head(mergeData[, c(ncol(mergeData) - (col_idx-1), (1:ncol(mergeData))[-col_idx+1])])
mergeData[, c(1,col_idx, 2:col_idx-1)]
head(mergeData[, c(1,col_idx, 2:col_idx-1)])
test <- head(mergeData[, c(1,col_idx-1, 2:col_idx-1)])
head(mergeData[, c(1,col_idx-1, 2:col_idx-1)])
head(mergeData[, c(1,col_idx, 3:col_idx-1)])
mergeVisitData <- head(mergeData[, c(1,col_idx, 3:col_idx-1)])
head(mergeVisitData)
LengthOfVisitSum <-summarize(lengthOfVisitSummary, touristID, lengthOfVisitCnt)
mergeData <- merge(trainData, LengthOfVisitSum,  by = "touristID")
head(mergeData)
mergeVisitData <- mergeData[, c(1,col_idx, 3:col_idx-1)]
head(mergeVisitData)
head(mergeVisitData)
head(weekDayCallCountCast)
mergeData <- merge(weekDayCallCountCast, LengthOfVisitSum,  by = "touristID")
head(mergeData)
col_idx <- grep("lengthOfVisitCnt", names(mergeData))
mergeVisitData <- mergeData[, c(1,col_idx, 3:col_idx-1)]
head(mergeVisitData)
tail(mergeVisitData)
save(list=ls(), file="finaltest_이재현_U2015046.RData")
View(mergeVisitData)
