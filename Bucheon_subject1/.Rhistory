V(g)$color <- btw.colors[btw.score]
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
btw.score
V(g)$color
length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
rev(heat.colors(max(btw.score)))
round(btw)+1
btw.score <- round(btw)+1
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
E(g)$label <- graph.strength(g)
E(g)$label <- V(g)$name
V(g)$color <- btw.colors[btw.score]
E(g)$label <- V(g)$name
V(g)$label <- V(g)$name
E(g)$label <- graph.strength(g)
E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
V(g)$label <- V(g)$name
printSNAPlot <- function(mat_dat,title) {
jpeg(paste0(title,".jpeg"), width = 800, height = 600)
# pdf.options(family = "Korea1deb")
g<- graph.data.frame(mat_dat, directed = FALSE)
g<- simplify(g)
V(g)$size <- degree(g) # SNA package 차수
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
V(g)$name <- colnames(mat_dat)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
# length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
V(g)$label <- V(g)$name
V(g)$label.cex <- 1
E(g)$label <- graph.strength(g)
E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
plot(g, edge.width = degree(g), layout=layout, main = title)
print (btw)
dev.off()
}
printSNAPlot(base_mat, "기초학습")
V(g)$size <- degree(g) # SNA package 차수
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
V(g)$name <- colnames(mat_dat)
V(g)$size <- degree(g) # SNA package 차수
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
E(g)$label <- graph.strength(g)
graph.strength(g)
E(g)$label
length(graph.strength(g))
E(g)$label <- graph.strength(g)
E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
graph.strength(g)
E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
plot(g, edge.width = degree(g), layout=layout, main = title)
printSNAPlot <- function(mat_dat,title) {
jpeg(paste0(title,".jpeg"), width = 800, height = 600)
# pdf.options(family = "Korea1deb")
g<- graph.data.frame(mat_dat, directed = FALSE)
g<- simplify(g)
V(g)$name <- colnames(mat_dat)
V(g)$label <- V(g)$name
V(g)$size <- degree(g) # SNA package 차수
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
# length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
#   E(g)$label <- graph.strength(g)
#   E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
plot(g, edge.width = degree(g), layout=layout, main = title)
print (btw)
dev.off()
}
printSNAPlot <- function(mat_dat,title) {
jpeg(paste0(title,".jpeg"), width = 800, height = 600)
# pdf.options(family = "Korea1deb")
g<- graph.data.frame(mat_dat, directed = FALSE)
g<- simplify(g)
V(g)$name <- colnames(mat_dat)
V(g)$label <- V(g)$name
V(g)$size <- degree(g) # SNA package 차수
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
# length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
#   E(g)$label <- graph.strength(g)
#   E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
plot(g, edge.width = degree(g), layout=layout, main = title)
print (plot(g, edge.width = degree(g), layout=layout, main = title))
print (btw)
dev.off()
}
base_mat <- getAllData_Matrix(base_data)
head(base_mat)
printSNAPlot(base_mat, "기초학습")
V(g)$color <- btw.colors[btw.score]
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
layout = layout.fruchterman.reingold(g)
plot(g, edge.width = degree(g), layout=layout, main = title)
g<- graph.data.frame(mat_dat, directed = FALSE)
g<- simplify(g)
V(g)$name <- colnames(mat_dat)
V(g)$label <- V(g)$name
V(g)$size <- degree(g) # SNA package 차수
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
printSNAPlot <- function(mat_dat,title) {
jpeg(paste0(title,".jpeg"), width = 800, height = 600)
# pdf.options(family = "Korea1deb")
g<- graph.data.frame(mat_dat, directed = FALSE)
g<- simplify(g)
V(g)$name <- colnames(mat_dat)
V(g)$label <- V(g)$name
V(g)$size <- degree(g) # SNA package 차수
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
# length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
#   E(g)$label <- graph.strength(g)
#   E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
plot(g, edge.width = degree(g), layout=layout, main = title)
print (plot(g, edge.width = degree(g), layout=layout, main = title))
print (btw)
dev.off()
}
printSNAPlot(base_mat, "기초학습")
base_engineer_mat <- getSeriesData_Matrix(base_data, engineer)
head(base_engineer_mat)
printSNAPlot(base_engineer_mat, "기초학습-공학계열")
base_engineer_mat <- getSeriesData_Matrix(base_data, engineer)
head(base_engineer_mat)
printSNAPlot(base_engineer_mat, "기초학습-공학계열")
base_social_mat <- getSeriesData_Matrix(base_data, social)
printSNAPlot(base_social_mat, "기초학습-인문사회계열")
base_artpsy_mat <- getSeriesData_Matrix(base_data, art_psy)
printSNAPlot(base_artpsy_mat, "기초학습-예체능계열")
base_science_mat <- getSeriesData_Matrix(base_data, science)
printSNAPlot(base_science_mat, "기초학습-자연과학계열")
base_joby_mat <- getJobYnData_Matrix(base_data, jobY)
printSNAPlot(base_joby_mat, "기초학습-취업")
base_jobn_mat <- getJobYnData_Matrix(base_data, jobN)
printSNAPlot(base_jobn_mat, "기초학습-미취업")
base_engineer_jobY_mat <- getSeriesJobYnData_Matrix(base_data, engineer, jobY)
printSNAPlot(base_engineer_jobY_mat, "기초학습-취업_공학계열")
jobemp_mat <- getAllData_Matrix(jobemp_data)
jobemp_mat
jobemp_data <- jobemp_data[-which(is.na(jobemp_data$이름)), ]
jobemp_data <- subset(jobemp_data , !(학과 %in% except))
jobemp_mat <- getAllData_Matrix(jobemp_data)
jobemp_mat
jobemp <- loadWorkbook("jobemp.xls")
jobemp_data <- readWorksheet(jobemp,1, check.names = FALSE)
head(jobemp_data)
jobemp_col <- colnames(jobemp_data)
jobemp_data <- jobemp_data[-which(is.na(jobemp_data$이름)), ]
jobemp_data <- subset(jobemp_data , !(학과 %in% except))
jobemp_mat <- getAllData_Matrix(jobemp_data)
jobemp_mat
printSNAPlot2(jobemp_mat, "취업지원")
write.csv(file = "취업지원.csv", jobemp_mat)
printSNAPlot2(jobemp_mat, "취업지원")
printSNAPlot <- function(mat_dat,title) {
jpeg(paste0(title,".jpeg"), width = 800, height = 600)
# pdf.options(family = "Korea1deb")
g<- graph.data.frame(mat_dat, directed = FALSE)
g<- simplify(g)
V(g)$name <- colnames(mat_dat)
V(g)$label <- V(g)$name
V(g)$size <- degree(g) # SNA package 차수
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
# length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
#   E(g)$label <- graph.strength(g)
#   E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
plot(g, edge.width = degree(g), layout=layout, main = title)
# plot(g, edge.width = degree(g), layout=layout, main = title)
print (btw)
dev.off()
}
jobemp_mat <- getAllData_Matrix(jobemp_data)
jobemp_mat
printSNAPlot2(jobemp_mat, "취업지원")
printSNAPlot <- function(mat_dat,title) {
# jpeg(paste0(title,".jpeg"), width = 800, height = 600)
# pdf.options(family = "Korea1deb")
g<- graph.data.frame(mat_dat, directed = FALSE)
g<- simplify(g)
V(g)$name <- colnames(mat_dat)
V(g)$label <- V(g)$name
V(g)$size <- degree(g) # SNA package 차수
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
# length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
#   E(g)$label <- graph.strength(g)
#   E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
plot(g, edge.width = degree(g), layout=layout, main = title)
# plot(g, edge.width = degree(g), layout=layout, main = title)
print (btw)
# dev.off()
}
printSNAPlot2(jobemp_mat, "취업지원")
printSNAPlot <- function(mat_dat,title) {
# jpeg(paste0(title,".jpeg"), width = 800, height = 600)
# pdf.options(family = "Korea1deb")
g<- graph.data.frame(mat_dat, directed = FALSE)
g<- simplify(g)
V(g)$name <- colnames(mat_dat)
V(g)$label <- V(g)$name
V(g)$size <- degree(g) # SNA package 차수
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
# length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
#   E(g)$label <- graph.strength(g)
#   E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
plot(g, edge.width = degree(g), layout=layout, main = title)
# plot(g, edge.width = degree(g), layout=layout, main = title)
print (btw)
# dev.off()
}
printSNAPlot(jobemp_mat, "취업지원")
printSNAPlot <- function(mat_dat,title) {
# jpeg(paste0(title,".jpeg"), width = 800, height = 600)
# pdf.options(family = "Korea1deb")
g<- graph.data.frame(mat_dat, directed = FALSE)
g<- simplify(g)
V(g)$name <- colnames(mat_dat)
V(g)$label <- V(g)$name
V(g)$label
V(g)$size <- degree(g) # SNA package 차수
V(g)$size
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
# length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
#   E(g)$label <- graph.strength(g)
#   E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
plot(g, edge.width = degree(g), layout=layout, main = title)
# plot(g, edge.width = degree(g), layout=layout, main = title)
print (btw)
# dev.off()
}
jobemp_mat <- getAllData_Matrix(jobemp_data)
jobemp_mat
printSNAPlot2(jobemp_mat, "취업지원")
printSNAPlot(jobemp_mat, "취업지원")
printSNAPlot <- function(mat_dat,title) {
# jpeg(paste0(title,".jpeg"), width = 800, height = 600)
# pdf.options(family = "Korea1deb")
g<- graph.data.frame(mat_dat, directed = FALSE)
g<- simplify(g)
V(g)$name <- colnames(mat_dat)
V(g)$label <- V(g)$name
print(V(g)$label)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
# length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
V(g)$size <- degree(g) # SNA package 차수
# V(g)$size <- btw # SNA package 차수
print(V(g)$size)
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
#   E(g)$label <- graph.strength(g)
#   E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
plot(g, edge.width = degree(g), layout=layout, main = title)
# plot(g, edge.width = degree(g), layout=layout, main = title)
print (btw)
# dev.off()
}
jobemp_mat <- getAllData_Matrix(jobemp_data)
jobemp_mat
jobemp <- loadWorkbook("jobemp.xls")
jobemp_data <- readWorksheet(jobemp,1, check.names = FALSE)
head(jobemp_data)
jobemp_col <- colnames(jobemp_data)
jobemp_data <- jobemp_data[-which(is.na(jobemp_data$이름)), ]
jobemp_data <- subset(jobemp_data , !(학과 %in% except))
jobemp_mat <- getAllData_Matrix(jobemp_data)
printSNAPlot(jobemp_mat, "취업지원")
printSNAPlot2 <- function(mat_dat,title) {
# jpeg(paste0(title,".jpeg"), width = 800, height = 600)
# pdf.options(family = "Korea1deb")
g<- graph.data.frame(mat_dat, directed = FALSE)
g<- simplify(g)
V(g)$name <- colnames(mat_dat)
V(g)$label <- V(g)$name
print(V(g)$label)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
# length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
# V(g)$size <- degree(g) # SNA package 차수
V(g)$size <- btw # SNA package 차수
print(V(g)$size)
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
#   E(g)$label <- graph.strength(g)
#   E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
plot(g, edge.width = degree(g), layout=layout, main = title)
# plot(g, edge.width = degree(g), layout=layout, main = title)
print (btw)
# dev.off()
}
jobemp_mat <- getAllData_Matrix(jobemp_data)
jobemp_mat
printSNAPlot2(jobemp_mat, "취업지원")
printSNAPlot2(jobemp_mat, "취업지원")
printSNAPlot(jobemp_mat, "취업지원")
printSNAPlot2(jobemp_mat, "취업지원")
printSNAPlot2 <- function(mat_dat,title) {
# jpeg(paste0(title,".jpeg"), width = 800, height = 600)
# pdf.options(family = "Korea1deb")
g<- graph.data.frame(mat_dat, directed = FALSE)
g<- simplify(g)
V(g)$name <- colnames(mat_dat)
V(g)$label <- V(g)$name
print(V(g)$label)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
# length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
# V(g)$size <- degree(g) # SNA package 차수
V(g)$size <- btw # SNA package 차수
print(V(g)$size)
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
#   E(g)$label <- graph.strength(g)
#   E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
# plot(g, edge.width = degree(g), layout=layout, main = title)
# plot(g, edge.width = degree(g), layout=layout, main = title)
gplot(g, displayLabels=T)
print (btw)
# dev.off()
}
printSNAPlot(jobemp_mat, "취업지원")
printSNAPlot2(jobemp_mat, "취업지원")
library(sna)
printSNAPlot2 <- function(mat_dat,title) {
# jpeg(paste0(title,".jpeg"), width = 800, height = 600)
# pdf.options(family = "Korea1deb")
g<- graph.data.frame(mat_dat, directed = FALSE)
g<- simplify(g)
V(g)$name <- colnames(mat_dat)
V(g)$label <- V(g)$name
print(V(g)$label)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
# length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
# V(g)$size <- degree(g) # SNA package 차수
V(g)$size <- btw # SNA package 차수
print(V(g)$size)
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
#   E(g)$label <- graph.strength(g)
#   E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
# plot(g, edge.width = degree(g), layout=layout, main = title)
# plot(g, edge.width = degree(g), layout=layout, main = title)
gplot(g, displayLabels=T)
print (btw)
# dev.off()
}
printSNAPlot2(jobemp_mat, "취업지원")
library(igraph)
library(XLConnect)
printSNAPlot2(jobemp_mat, "취업지원")
printSNAPlot2 <- function(mat_dat,title) {
# jpeg(paste0(title,".jpeg"), width = 800, height = 600)
# pdf.options(family = "Korea1deb")
g<- graph.data.frame(mat_dat, directed = FALSE)
g<- simplify(g)
V(g)$name <- colnames(mat_dat)
V(g)$label <- V(g)$name
print(V(g)$label)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
# length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
# V(g)$size <- degree(g) # SNA package 차수
V(g)$size <- btw # SNA package 차수
print(V(g)$size)
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
#   E(g)$label <- graph.strength(g)
#   E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
# plot(g, edge.width = degree(g), layout=layout, main = title)
plot(g, edge.width = degree(g), layout=layout, main = title)
# gplot(g, displayLabels=T)
print (btw)
# dev.off()
}
printSNAPlot2(jobemp_mat, "취업지원")
betweenness
printSNAPlot2 <- function(mat_dat,title) {
# jpeg(paste0(title,".jpeg"), width = 800, height = 600)
# pdf.options(family = "Korea1deb")
g<- graph.data.frame(mat_dat, directed = TRUE)
g<- simplify(g)
V(g)$name <- colnames(mat_dat)
V(g)$label <- V(g)$name
print(V(g)$label)
btw <- betweenness(g) # SNA package(근접중심성)
btw.score <- round(btw)+1
# length(btw.score)
btw.colors <- rev(heat.colors(max(btw.score)))
V(g)$color <- btw.colors[btw.score]
# V(g)$size <- degree(g) # SNA package 차수
V(g)$size <- btw # SNA package 차수
print(V(g)$size)
V(g)$label.cex <- degree(g) / max(degree(g)) + 0.3
# set.seed(1234)
#   E(g)$label <- graph.strength(g)
#   E(g)$label.cex <- degree(g) / max(degree(g)) + 0.2
layout = layout.fruchterman.reingold(g)
# plot(g, edge.width = degree(g), layout=layout, main = title)
plot(g, edge.width = degree(g), layout=layout, main = title)
# gplot(g, displayLabels=T)
print (btw)
# dev.off()
}
printSNAPlot2(jobemp_mat, "취업지원")
jobemp_engineer_mat <- getSeriesData_Matrix(jobemp_data, engineer)
printSNAPlot(jobemp_engineer_mat, "취업지원-공학계열")
printSNAPlot2(jobemp_engineer_mat, "취업지원-공학계열")
printSNAPlot2(jobemp_social_mat, "취업지원-인문사회계열")
printSNAPlot2(jobemp_artpsy_mat, "취업지원-예체능계열")
printSNAPlot2(jobemp_science_mat, "취업지원-자연과학계열")
printSNAPlot2(jobemp_science_mat, "취업지원-자연과학계열")
printSNAPlot2(jobemp_joby_mat, "취업지원-취업")
printSNAPlot2(jobemp_jobn_mat, "취업지원-미취업")
printSNAPlot2(jobemp_jobn_mat, "취업지원-미취업")
printSNAPlot2(jobemp_engineer_jobY_mat, "취업지원-취업_공학계열")
printSNAPlot2(jobemp_social_jobY_mat, "취업지원-취업_인문사회계열")
printSNAPlot2(jobemp_artpsy_jobY_mat, "취업지원-취업_예체능계열")
printSNAPlot2(jobemp_science_jobY_mat, "취업지원-취업_자연과학계열")
printSNAPlot2(jobemp_engineer_jobN_mat, "취업지원-미취업_공학계열")
printSNAPlot2(jobemp_social_jobN_mat, "취업지원-미취업_인문사회계열")
printSNAPlot2(jobemp_artpsy_jobN_mat, "취업지원-미취업_예체능계열")
printSNAPlot2(jobemp_science_jobN_mat, "취업지원-미취업_자연과학계열")
language_data <- language_data[-which(is.na(language_data$이름)), ]
language_data <- subset(language_data , !(학과 %in% except))
write.csv(file = "어학.csv", language_data)
write.csv(file = "어학.csv", language_data)
language <- loadWorkbook("language.xls")
language_data <- readWorksheet(language,1, check.names = FALSE)
head(language_data)
language_col <- colnames(language_data)
language_data <- language_data[-which(is.na(language_data$이름)), ]
language_data <- subset(language_data , !(학과 %in% except))
write.csv(file = "어학.csv", language_data)
language_mat <- getAllData_Matrix(language_data)
printSNAPlot2(language_mat, "어학")
all_modi_mat <- getAllData_Matrix(all_modi_data)
library(XLConnect)
library(igraph)
all_modi_mat <- getAllData_Matrix(all_modi_data)
write.csv(file="수정.csv", all_modi_mat)
degree(g)
degree(g)
