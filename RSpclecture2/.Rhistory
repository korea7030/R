trainData <- read.csv("trainData.csv")
library(dplyr)
uniqIdAggr <- group_by(trainData, touristID)
uniqIdSumm <- summarise(uniqIdAggr, x=length(dateChar))
head(uniqIdSumm)
uniqIdArrange <- arrange(uniqIdSumm, desc(x))
IdNationGroup <- group_by(trainData, touristID, nation)
IdNationSumm <- summarise(IdNationGroup, x= length(dateChar))
IdNationSumm <- summarise(IdNationGroup, x= length(dateChar))
IdNationSumm
IdNationArrange <- arrange(IdNationSumm, desc(x))
IdNationArrange
rm(IdNationArrange)
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
head(IdNationSumm[order(IdNationSumm$x), decreasing=T),],20)
head(IdNationSumm[order(IdNationSumm$x, decreasing=T),],20)
IdNationArrange <- arrange(IdNationSumm, desc(x))
IdNationArrange
IdNationArrange <- arrange(IdNationSumm, asc(x))
IdNationArrange <- arrange(IdNationSumm, asc(x))
IdNationArrange <- arrange(IdNationSumm)
IdNationArrange
IdNationArrange <- arrange(IdNationSumm, order(x) )
IdNationArrange
IdNationArrange <- arrange(IdNationSumm, order(x, decreasing=T) )
IdNationArrange
IdNationArrange
IdNationArrange
IdNationArrange
IdNationArrange <- arrange(IdNationSumm, order(x, decreasing=T) )
IdNationArrange
IdNationArrange <- arrange(IdNationSumm, desc(x))
IdNationArrange
uniqIdArrange
IdNationGroup <- group_by(trainData, touristID)
IdNationSumm <- summarise(IdNationGroup, x= length(dateChar))
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
IdNationSumm
IdNationArrange <- arrange(IdNationSumm, desc(x))
IdNationArrange
IdNationGroup <- group_by(trainData, touristID, nation)
IdNationSumm <- summarise(IdNationGroup, x= length(dateChar))
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
## China
IdNationArrange <- arrange(IdNationSumm, desc(x))
head(IdNationSumm[order(IdNationSumm$x, decreasing=T),],20)
?order
head(IdNationSumm[order(IdNationSumm$x, decreasing=T),],20)
IdNationSumm <- IdNationSumm[order(IdNationSumm$x, decreasing=T),]
head(IdNationSumm)
NationAggr <- group_by(IdNationSumm, nation)
NationSumm <- summarise(NationAggr, Count = sum(x))
head(NationSumm)
NationArrange <- arrange(NationSumm, desc(Count))
head(NationArrange)
trainData$timestamp <- strptime(paste0(trainData$dateChar,trainData$timeChar), format="%Y/%m%d %H%M-%S")
trainData$timestamp
head(trainData$timestamp)
str(trainData$timestamp)
trainData$wday <- trainData$timestamp$wday
trainData
trainData$hour <- trainData$timestamp$hour
trainData
trainData$wday <- factor(trainData$wday, levels = c(1:6, 0), ordered = T, labels = c("월","화","수","목","금","토","일"))
trainData$wday
IdWdayGroupBy <- group_by(trainData, touristID, wday)
trainData$timestamp <- as.character(trainData$timestamp)
IdWdayGroupBy <- group_by(trainData, touristID, wday)
IdWdayGroupBy <- group_by(trainData, wday)
IdWdaySumm <- summarise(IdWdayGroupBy, length=(timestamp))
IdWdayGroupBy
IdWdaySumm <- summarise(IdWdayGroupBy, length=(timestamp))
IdWdaySumm <- summarise(IdWdayGroupBy, x= length=(timestamp))
IdWdaySumm <- summarise(IdWdayGroupBy, x= length(timestamp))
IdWdaySumm
IdWdayArrange <- arrange(IdWdaySumm, desc(x))
IdWdayArrange
timeGroupBy <- group_by(trainData, hour)
timeGroupBy <- summarise(trainData, x=length(timestamp))
timeGroupBy <- group_by(trainData, hour)
timeSumm <- summarise(timeGroupBy, x=length(timestamp))
timeSumm
timeArrange <- arrange(timeSumm, desc(x))
head(timeArrange)
library(reshape)
IdWday<- group_by(trainData, touristID, wday)
IdWdaySumm <- summarise(Idwday, x = length(timestamp))
IdWdaySumm <- summarise(IdWday, x = length(timestamp))
head(IdWdaySumm)
IdWdayCast <- cast(IdWdaySumm, touristID~wday, value=x)
head(IdWdaySumm)
IdWdayCast <- cast(IdWdaySumm, touristID~wday, value="x", fun.aggregate = sum)
head(IdwdayCast)
head(IdWdayCast)
IdWdayCast$WeekDayCall <- apply(IdWdayCast[2:5,],sum)
IdWdayCast$WeekDayCall <- apply(IdWdayCast[2:5,],1,sum)
IdWdayCast$WeekDayCall <- apply(IdWdayCast[2:5,],1,sum)
IdWdayCast$WeekDayCall <- apply(IdWdayCast[,2:6],1,sum)
?apply
IdWdayCast$WeekDayCall
IdWdayCast$WeekendCall <- apply(IdWdayCast[,7:8],1, sum)
IdWdayCast$WeekendCall
head(IdWdayCast)
cityNationGroup <- group_by(trainData, city, nation)
cityNationSumm <- summarise(cityNationGroup, x = length(timestamp))
head(cityNationSumm)
cityNationCast <- cast(cityNationSumm, city~nation, value="x", sum)
head(cityNationCast)
cityNationCast$sum <- apply(cityNationSumm[,2:11],1,sum)
cityNationCast$sum <- apply(cityNationSumm[,2:11],1,sum)
cityNationCast$sum <- cityNationSumm[,2:11]
cityNationCast$sum <- cityNationCast[,2:11]
cityNationCast$sum
head(cityNationCast)
cityNationCast <- cast(cityNationSumm, city~nation, value="x", sum)
cityNationCast$sum <- apply(cityNationCast[,2:11], 1, sum)
cityNationCast
cityNationCastPercent <- data.frame(cityNationCast$city, cityNationCast[,2:11] / cityNationCast$sum)
cityNationCastPercent
wdayCount <- function(x) {
count = 0
for(i in x:length(x))
{
if(x[i] > 0) count = count+1
}
return (count)
}
cityNationCast$wdayCount <- apply(cityNationCast[,2:8], 1, wdayCount(x))
cityNationCast$wdayCount <- apply(cityNationCast[,2:8], 1,function(x) wdayCount(x))
wdayCount <- function(x) {
count = 0
for (i in 1:length(x) ) {
if(x[i] > 0) count=count+1
}
return(count)
}
cityNationCast$wdayCount <- apply(cityNationCast[,2:8], 1,function(x) wdayCount(x))
cityNationCast$wdayCount <- apply(cityNationCast[,2:8], 1,wdayCount(x))
cityNationCast$wdayCount
cityNationCast
cityNationCast
IdWdayCast
IdWdayCast$wdayCount <- apply(IdWdayCast[,2:8], 1,wdayCount(x))
IdWdayCast$wdayCount <- apply(IdWdayCast[,2:8], 1,function(x) wdayCount(x))
head(IdWdayCast)
IdWdayCast$wdayCount <- apply(IdWdayCast[,2:7], 1,function(x) wdayCount(x))
head(IdWdayCast)
IdWdayCast$wdayCount <- apply(IdWdayCast[,2:8], 1,function(x) wdayCount(x))
head(IdWdayCast)
tail(IdWdayCast)
?mode
Class(1)
class(1)
mode(1)
(quizData <- seq(from=-150, by=3, to=150))
quizData %% 2 == 0
quizData[quizData %% 2 == 0]
length(quizData[quizData %% 2 == 0])
quizData %% 2 == 1
quizData[quizData %% 2 == 1]
sum(quizData[quizData %% 2 == 1])
quizData
str(quizData)
quizData
quizData[1]
quizData[2]
quizData(2)
quizData2 <- c(quizData[1:2],500,quizData[3:length(quizData)])
length(quizData2) #벡터의 길이가 하나 추가되었습니다.
library(jpeg)
?jpeg
?vignette
vignette("jpeg")
vignette("jpeg")
mtrushBMP <- readJPEG("image_sample.jpg")
str(mtrushBMP)
class(mtrushBMP)
dim(mtrushBMP)
range(mtrushBMP[1,,1])
max(mtrushBMP)
min(mtrushBMP)
str(mtrushBMP)
class(mtrushBMP)
dim(mtrushBMP)
max(mtrushBMP)
min(mtrushBMP)
dim(mtrushBMP)[1]
dim(mtrushBMP)
dim(mtrushBMP)[1]
dim(mtrushBMP)
mtrushBMP <- readJPEG("image_sample.jpg")
for (x in 1:dim(mtrushBMP)[1])
{
if ( x %% 50 == 0)
{
mtrushBMP[x,,1] <- 1
mtrushBMP[x,,2] <- 1
mtrushBMP[x,,3] <- 1
}
}
writeJPEG(mtrushBMP,target="mtrushJPG_x.jpg")
dim(mtrushBMP)[2]
for (y in 1:dim(mtrushBMP)[2]) {
if ( y %% 50 == 0) {
mtrushBMP[,y,1] <- 1
mtrushBMP[,y,2] <- 1
mtrushBMP[,y,3] <- 1
}
}
writeJPEG(mtrushBMP,target="mtrushJPG_y.jpg")
for (x in 1:dim(mtrushBMP)[1]) {if ( x %% 50 == 0) {mtrushBMP[x,,1] <- 1;mtrushBMP[x,,2] <- 1;mtrushBMP[x,,3] <- 1;}}
dim(mtrushBMP)
names(mtrushBMP)
colnames(mtrushBMP)
dim(mtrushBMP)
dim(mtrushBMP)[2]
y <- c(1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,
1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1)
findruns <- function(x,k) {
n <- length(x)
runs <- NULL
for (i in 1:(n-k+1)) {
if (all(x[i:(i+k-1)]==1)) runs <- c(runs,i)
}
return(runs)
}
findruns(y,2)
y <- c(1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1)
findruns(y,2)
system.time(findruns(y,1))
findruns(y,1)
y <- c(1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,0,0,1)
findruns(y,2)
rm(list=ls())
library(dplyr)
trainData <- read.csv("trainData.csv")
uniqIdAggr <- group_by(trainData, touristID)
uniqIdSumm <- summarise(uniqIdAggr, x=length(dateChar))
head(uniqIdSumm)
uniqIdArrange <- arrange(uniqIdSumm, desc(x))
uniqIdArrange
uniqIdSumm <- summarise(trainData, x=length(dateChar))
head(uniqIdSumm)
uniqIdSumm <- summarise(trainData, x=length(dateChar))
head(uniqIdSumm)
uniqIdAggr <- group_by(trainData, touristID)
uniqIdSumm <- summarise(trainData, x=length(dateChar))
head(uniqIdSumm)
uniqIdSumm <- summarise(uniqIdAggr, x=length(dateChar))
head(uniqIdSumm)
uniqIdArrange <- arrange(uniqIdSumm, desc(x))
head(uniqIdArrange)
IdNationGroup <- group_by(trainData, touristID, nation)
IdNationSumm <- summarise(IdNationGroup, x= length(dateChar))
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
View(trainData)
IdNationSumm <- summarise(IdNationGroup, x= length(dateChar))
IdNationSumm
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
IdNationSumm <- summarise(IdNationGroup, x= length(city))
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
head(IdNationTable)
hist(IdNationTable)
test <- group_by(trainData,nation)
IdNationSumm <- summarise(test, x= length(city))
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
IdNationSumm
IdNationSumm
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
IdNationSumm
IdNationGroup <- group_by(trainData, touristID, nation)
test <- group_by(trainData,nation)
IdNationSumm <- summarise(test, x= length(city))
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
IdNationGroup <- group_by(trainData, touristID, nation)
IdNationSumm <- summarise(test, x= length(city))
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
IdNationSumm <- summarise(IdNationGroup, x= length(city))
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
test <- group_by(trainData,nation,city)
IdNationSumm <- summarise(test, x= length(city))
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
IdNationSumm <- summarise(IdNationGroup, x= length(city))
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
hist(IdNationTable)
IdNationGroup <- group_by(trainData, touristID, nation)
library(dplyr)
IdNationGroup <- group_by(trainData, touristID, nation)
IdNationSumm <- summarise(IdNationGroup, x= length(city))
IdNationTable <- table(IdNationSumm$nation)
head(IdNationTable)
IdNationArrange <- arrange(IdNationSumm, desc(x))
IdNationArrange
IdNationSumm
head(IdNationSumm[order(IdNationSumm$x, decreasing=T),],20)
head(IdNationSumm)
IdNationSumm <- IdNationSumm[order(IdNationSumm$x, decreasing=T),]
head(IdNationSumm)
order(IdNationSumm$x, decreasing=T)
order(IdNationSumm$x, decreasing=T)
IdNationSumm[order(IdNationSumm$x, decreasing=T),]
head(IdNationSumm[order(IdNationSumm$x, decreasing=T),],20)
IdNationSumm <- IdNationSumm[order(IdNationSumm$x, decreasing=T),]
head(IdNationSumm)
source('C:/RCodeRepositories/RSpclecture2/week2.R', encoding = 'UTF-8', echo=TRUE)
NationAggr <- group_by(IdNationSumm, nation)
NationSumm <- summarise(NationAggr, Count = sum(x))
head(NationSumm)
NationArrange <- arrange(NationSumm, desc(Count))
head(NationArrange)
NationAggr
NationAggr <- group_by(IdNationSumm, nation)
NationSumm <- summarise(NationAggr, Count = sum(x))
head(NationSumm)
NationArrange <- arrange(NationSumm, desc(Count))
head(NationArrange)
View(trainData)
View(trainData)
trainData$timestamp <- strptime(paste0(trainData$dateChar,trainData$timeChar), format="%Y/%m%d %H%M-%S")
trainData$wday <- trainData$timestamp$wday  # 0 : 일요일 , 6 : 토요일
trainData$wday <- factor(trainData$wday, levels = c(1:6, 0), ordered = T, labels = c("월","화","수","목","금","토","일"))
trainData$wday
trainData$wday <- factor(trainData$wday, levels = c(1:6, 0), ordered = T, labels = c("월","화","수","목","금","토","일"))
trainData$wday
trainData$wday <- trainData$timestamp$wday  # 0 : 일요일 , 6 : 토요일
trainData$wday <- factor(trainData$wday, levels = c(1:6, 0), ordered = T, labels = c("월","화","수","목","금","토","일"))
trainData$wday
trainData$hour <- trainData$timestamp$hour
trainData$hour
IdWdayGroupBy <- group_by(trainData, wday)
trainData$timestamp <- as.character(trainData$timestamp)
IdWdayGroupBy <- group_by(trainData, wday)
IdWdayGroupBy <- group_by(trainData, wday)
IdWdaySumm <- summarise(IdWdayGroupBy, x= length(timestamp))
IdWdayArrange <- arrange(IdWdaySumm, desc(x))
IdWdayArrange
View(trainData)
View(trainData)
trainData$wday <- factor(trainData$wday, levels = c(0:6), ordered = T, labels = c("월","화","수","목","금","토","일"))
$wday
trainData$wday <- trainData$timestamp$wday  # 0 : 일요일 , 6 : 토요일
trainData$wday <- trainData$timestamp$wday  # 0 : 일요일 , 6 : 토요일
trainData$timestamp <- strptime(paste0(trainData$dateChar,trainData$timeChar), format="%Y/%m%d %H%M-%S")
trainData$wday <- trainData$timestamp$wday  # 0 : 일요일 , 6 : 토요일
trainData$wday <- factor(trainData$wday, levels = c(0:6), ordered = T, labels = c("월","화","수","목","금","토","일"))
trainData$wday
trainData$wday <- trainData$timestamp$wday  # 0 : 일요일 , 6 : 토요일
trainData$wday <- factor(trainData$wday, levels = c(1:6,0), ordered = T, labels = c("월","화","수","목","금","토","일"))
trainData$wday
trainData$wday <- factor(trainData$wday, levels = c(1:6,0), ordered = T, labels = c("월","화","수","목","금","토","일"))
View(trainData)
trainData$timestamp <- strptime(paste0(trainData$dateChar,trainData$timeChar), format="%Y/%m%d %H%M-%S")
trainData$wday <- trainData$timestamp$wday  # 0 : 일요일 , 6 : 토요일
trainData$wday <- factor(trainData$wday, levels = c(1:6,0), ordered = T, labels = c("월","화","수","목","금","토","일"))
View(trainData)
rm(list=ls())
trainData$timestamp <- strptime(paste0(trainData$dateChar,trainData$timeChar), format="%Y/%m%d %H%M-%S")
trainData <- read.csv("trainData.csv")
trainData$timestamp <- strptime(paste0(trainData$dateChar,trainData$timeChar), format="%Y/%m%d %H%M-%S")
head(trainData$timestamp)
trainData$wday <- trainData$timestamp$wday  # 0 : 일요일 , 6 : 토요일
trainData$wday <- factor(trainData$wday, levels = c(1:6,0), ordered = T, labels = c("월","화","수","목","금","토","일"))
trainData$wday
trainData$wday <- trainData$timestamp$wday  # 0 : 일요일 , 6 : 토요일
trainData$wday <- factor(trainData$wday, levels = c(1:6,0), ordered = T, labels = c("월","화","수","목","금","토","일"))
trainData$hour <- trainData$timestamp$hour
trainData$timestamp <- as.character(trainData$timestamp)
IdWdayGroupBy <- group_by(trainData, wday)
IdWdaySumm <- summarise(IdWdayGroupBy, x= length(timestamp))
IdWdayArrange <- arrange(IdWdaySumm, desc(x))
IdWdayArrange
timeGroupBy <- group_by(trainData, hour)
timeSumm <- summarise(timeGroupBy, x=length(timestamp))
timeArrange
timeGroupBy <- group_by(trainData, hour)
timeSumm <- summarise(timeGroupBy, x=length(timestamp))
timeSumm
timeArrange <- arrange(timeSumm, desc(x))
head(timeArrange)
library(reshape)
IdWday<- group_by(trainData, touristID, wday)
IdWdaySumm <- summarise(IdWday, x = length(timestamp))
head(IdWdaySumm)
IdWdayCast <- cast(IdWdaySumm, touristID~wday, value="x", fun.aggregate = sum)
head(IdWdayCast)
head(IdWdaySumm)
IdWdayCast$WeekDayCall <- apply(IdWdayCast[,2:6],1,sum)
IdWdayCast$WeekendCall <- apply(IdWdayCast[,7:8],1, sum)
head(IdWdayCast)
IdWdayCast
head(IdWdayCast)
IdWdayCast$WeekDayCall <- apply(IdWdayCast[,2:6],1,sum)
cityNationGroup <- group_by(trainData, city, nation)
cityNationSumm <- summarise(cityNationGroup, x = length(timestamp))
head(cityNationSumm)
cityNationCast <- cast(cityNationSumm, city~nation, value="x", sum)
head(cityNationCast)
cityNationCast$sum <- apply(cityNationCast[,2:11], 1, sum)
cityNationCastPercent <- data.frame(cityNationCast$city, cityNationCast[,2:11] / cityNationCast$sum)
cityNationCastPercent <- data.frame(cityNationCast$city, cityNationCast[,2:11] / cityNationCast$sum)
cityNationCastPercent
cityNationCast$sum
cityNationCast$sum <- apply(cityNationCast[,2:11], 1, sum)
cityNationCast
head(cityNationCast)
cityNationCastPercent <- data.frame(cityNationCast$city, cityNationCast[,2:11] / cityNationCast$sum)
cityNationCastPercent
