getwd()
library(stringr)
library(reshape)
rm(list=ls())
read.csv("./data/trainData.csv", stringAsFactors=FALSE, na.strings="NA")
read.csv("./data/trainData.csv", stringsAsFactors=FALSE, na.strings="NA")
trainData <- read.csv("./data/trainData.csv", stringsAsFactors=FALSE, na.strings="NA")
View(trainData)
trainData.dateChar
trainData$dateChar
is.vector(trainData$dateChar)
str(trainData)
trainData[1,2]
str_sub(trainData$dateChar[1], -4, -1)
split(trainData$dateChar[1])
?split
strptime(x=trainData$dateChar, format="%Y/%m%d")
strptime(x=trainData$timeChar, format="%H-%m-%s")
strptime(x=trainData$timeChar, format="%H:%M-%S")
strptime(x=trainData$timeChar, format="%H-%M-%S")
strptime(x=trainData$timeChar, format="%H-%M-%S")
strptime(x=trainData$timeChar, format="%H:%M:%S")
strptime(x=trainData$timeChar, format="%H:%M")
strptime(x=trainData$timeChar, format="%m/%d/%Y %H:%M")
trainData$dateChar <- strptime(x=trainData$dateChar, format="%Y/%m%d")
trainData$timeChar
strptime(x=trainData$timeChar, format="%H:%M")
strptime(x=trainData$timeChar, format="%H-%M-%S")
View(trainData)
strptime(x=trainData$timeChar, format="%H:%M:%S")
strptime(x=trainData$timeChar, format="%H")
strptime(x=trainData$timeChar, format="%H-%M")
strptime(x=trainData$timeChar, format="%H:%M")
strptime(x=trainData$timeChar, format="%H:%m")
strptime(x=trainData$timeChar, format="%H")
trainData$timeChar$hour
aggregate(trainData$touristID, by=list(trainData$nation), FUN=sum)
aggregate(trainData$touristID, by=list(trainData$nation), FUN=mean)
aggregate(trainData$touristID, by=list(trainData$nation), FUN=length)
trainData$dateChar <- strptime(x=trainData$dateChar, format="%Y/%m%d")
strptime(x=trainData$timeChar, format="%H")
strptime(x=trainData$timeChar, format="%H-%M")
strptime(x=trainData$timeChar, format="%H-%M-%S")
aggregate(trainData$nation, by=list(trainData$touristID), FUN=length)
aggregate(trainData$nation, by=list(trainData$dateChar), FUN=length)
aggregate(trainData$nation, by=list(trainData$dateChar), FUN=length)
aggregate(trainData$touristID, by=list(trainData$dateChar), FUN=length)
aggregate(trainData$touristID, by=list(trainData$nation), FUN=length)
aggregate(trainData$nation, by=list(trainData$touristID), FUN=length)
strftime(x=trainData$timeChar, format="%H-%M-%S")
strptime(x=trainData$timeChar, format="%H-%M-%S")
aggregate(trainData$touristID, by=list(trainData$nation), FUN=length)
aggregate(trainData$nation, by=list(trainData$touristID), FUN=sum)
strptime(x="1419-45", fotmat="%H-%M-%S")
strptime(x="1419-45", fotmat="%H:%M:%S")
trainData$timeChar <- gsub("-", ":", trainData$timeChar)
strptime(x=trainData$timeChar, format="%H:%M:%S")
View(trainData)
trainData$dateChar <- strptime(x=trainData$dateChar, format="%Y/%m%d")
View(trainData)
View(trainData)
View(trainData)
trainData$dateChar <- strptime(x=trainData$dateChar, format="%Y/%m%d")
trainData <- read.csv("./data/trainData.csv", stringsAsFactors=FALSE, na.strings="NA")
trainData$dateChar <- strptime(x=trainData$dateChar, format="%Y/%m%d")
View(trainData)
trainData$timeChar <- gsub("-", ":", trainData$timeChar)
View(trainData)
strptime(x=trainData$timeChar, format="%H:%M:%S")
View(trainData)
strptime(x=trainData$timeChar, format="%H%M:%S")
trainData$timechar <- strptime(x=trainData$timeChar, format="%H%M:%S")
View(trainData)
trainData$timechar <- strptime(x=trainData$timeChar, format="%H:%M:%S")
trainData <- read.csv("./data/trainData.csv", stringsAsFactors=FALSE, na.strings="NA")
trainData$dateChar <- strptime(x=trainData$dateChar, format="%Y/%m%d")
trainData$timeChar <- gsub("-", ":", trainData$timeChar)
trainData$timeChar <- strptime(x=trainData$timeChar, format="%H:%M:%S")
View(trainData)
strptime(x=trainData$timeChar, format="%H:%M:%S")
aggregate(trainData$nation, by=list(trainData$touristID), FUN=sum)
aggregate(trainData$nation, by=list(trainData$touristID), FUN=length)
strptime(x=trainData$timeChar, format="%h:%m:%s")
trainData$timeChar <- strptime(x=trainData$timeChar, format="%H:%M:%S")
strptime(x=trainData$timeChar, format="%H:%M:%S")
trainData <- read.csv("./data/trainData.csv", stringsAsFactors=FALSE, na.strings="NA")
trainData$dateChar <- strptime(x=trainData$dateChar, format="%Y/%m%d")
trainData$timeChar <- gsub("-", ":", trainData$timeChar)
trainData$timeChar <- strptime(x=trainData$timeChar, format="%H:%M:%S")
trainData$dateChar <- strptime(x=trainData$dateChar, format="%Y/%m%d")
trainData
trainData$timeChar <- gsub("-", ":", trainData$timeChar)
strptime(x=trainData$timeChar, format="%H:%M")
as.numeric(trainData$timeChar)
trainData$timeChar[1]
trainData <- read.csv("./data/trainData.csv", stringsAsFactors=FALSE, na.strings="NA")
trainData$dateChar <- strptime(x=trainData$dateChar, format="%Y/%m%d")
trainData$timeChar <- gsub("-", ":", trainData$timeChar)
trainData$timeChar
strptime(x="2217", format="%H%M:%S")
strptime(x="2217", format="%H:%M")
strptime(x="2217", format="%H%M")
strptime(x="2217", format="%H%M%S")
aggregate(trainData$nation, by=list(touristID= trainData$touristID), FUN=length)
aggregate(x= trainData$nation, by=list(trainData$touristID), FUN=length)
head(aggregate(trainData$city, by=list(trainData$nation), FUN=length), sort=TRUE)
head(sort(aggregate(x= trainData$nation, by=list(trainData$touristID), FUN=length), decreasing=TRUE),5)
save(list=ls(), file="midtest_이재현_2015046.RData")
trainData$dateChar <- strptime(x=trainData$dateChar, format="%Y/%m%d")
trainData <- read.csv("./data/trainData.csv", stringsAsFactors=FALSE, na.strings="NA")
trainData$dateChar <- strptime(x=trainData$dateChar, format="%Y/%m%d")
trainData
trainData$timeChar <- strptime(x=trainData$timeChar, format="%H%M-%S")
trainData$timeChar
trainData
View(trainData)
trainData <- read.csv(".data/trainData.csv", stringAsFactor = TRUE, na.strings="NA")
trainData <- read.csv(".data/trainData.csv", stringAsFactors = TRUE, na.strings="NA")
?read.csv
trainData <- read.csv(".data/trainData.csv", stringsAsFactors = TRUE, na.strings="NA")
trainData <- read.csv(".data/trainData.csv", stringsAsFactors = TRUE, na.strings="NA")
getwd()
trainData <- read.csv("data/trainData.csv", stringsAsFactors = TRUE, na.strings="NA")
trainData
trainData
View(trainData)
trainData$dateChar <- strptime(trainData$dateChar, format="%Y %m %d")
trainData$dateChar
trainData$dateChar <- strptime(trainData$dateChar, format="%Y %M %d")
trainData <- read.csv("data/trainData.csv", stringsAsFactors = TRUE, na.strings="NA")
trainData$dateChar <- strptime(trainData$dateChar, format="%Y %M %d")
trainData$dateChar
trainData <- read.csv("data/trainData.csv", stringsAsFactors = TRUE, na.strings="NA")
trainData$CallData <- paste(trainData$dateChar, trainData$timeChar, sep=" ")
trainData$CallData <- strptime(trainData$CallData, format="%Y/%m%d %H$%M:%s")
trainData$CallData
trainData$CallData <- paste(trainData$dateChar, trainData$timeChar, sep=" ")
trainData$CallData <- strptime(trainData$CallData, format="%Y/%m/%d %H:%M:%s")
trainData$CallData
trainData <- read.csv("data/trainData.csv", stringsAsFactors = TRUE, na.strings="NA")
trainData$CallData <- paste(trainData$dateChar, trainData$timeChar, sep=" ")
trainData$CallData
trainData$CallData <- strptime(trainData$CallData, format="%Y/%m%d %H%M:%s")
trainData$CallData
trainData <- read.csv("data/trainData.csv", stringsAsFactors = TRUE, na.strings="NA")
trainData$CallData <- strptime(trainData$CallData, format="%Y/%m%d %H%M-%s")
trainData <- read.csv("data/trainData.csv", stringsAsFactors = TRUE, na.strings="NA")
trainData$CallData <- paste(trainData$dateChar, trainData$timeChar, sep=" ")
trainData$CallData <- strptime(trainData$CallData, format="%Y/%m%d %H%M-%s")
trainData$CallData
trainData <- read.csv("data/trainData.csv", stringsAsFactors = F, na.strings="NA")
trainData
trainData$CallData <- paste(trainData$dateChar, trainData$timeChar, sep=" ")
trainData$CallData <- strptime(trainData$CallData, format="%Y/%m%d %H%M-%s")
trainData$CallData
trainData$CallData <- paste(trainData$dateChar, trainData$timeChar, sep=" ")
trainData <- read.csv("data/trainData.csv", stringsAsFactors = F, na.strings="NA")
trainData
trainData$CallData <- strptime(trainData$CallData, format="%Y/%m/%d %H:%M:%s")
trainData$CallData <- strptime(trainData$CallData, format="%Y/%m/%d %H%M:%s")
CallByTouristID <- aggregate(trainData$dateChar, by=(list=trainData$touristID),FUN=length)
CallByTouristID <- aggregate(trainData$dateChar, by=(list(trainData$touristID)),FUN=length)
CallByTouristID <- aggregate(trainData$dateChar, list(trainData$touristID),FUN=length)
CallByTouristID
system.time(
uniqIdAggr <- aggregate(trainData$dateChar,
list(uniqId=trainData$touristID),
FUN=length)
)
uniqIdAggr
sort(uniqIdAggr, decreasing=T)
order(uniqIdAggr, decreasing=T)
head(order(uniqIdAggr, decreasing=T), 5)
head(order(unlist(uniqIdAggr), decreasing=T), 5)
uniqIdAggr
head(uniqIdAggr,5)
head(uniqIdAggr,decreasing=TRUE, 5)
head(uniqIdAggr,decreasing=TRUE, 5)
head(order(uniqIdAggr,decreasing=TRUE), 5)
head(sort(uniqIdAggr,decreasing=TRUE), 5)
head(order(uniqIdAggr,decreasing=decreasing), 5)
head(order(uniqIdAggr,decreasing="decreasing"), 5)
head(order(uniqIdAggr,decreasing=T), 5)
sort <- order(uniqIdAggr$x)
head(uniqIdAggr[sort,])
head(uniqIdAggr[sort,], decreasing=T)
sort <- order(uniqIdAggr$x, decreasing=T)
head(uniqIdAggr[sort,], decreasing=T)
head(uniqIdAggr)
head(uniqIdAggr[1,1])
head(uniqIdAggr)
head(uniqIdAggr[sort,], decreasing=T)
head(uniqIdAggr[,sort], decreasing=T)
head(uniqIdAggr[sort,], decreasing=T)
system.time(
visitNation <- aggregate(trainData$touristID, list(trainData$nation, trainData$city), FUN=length)
)
visitNation
sortByNation <- order(visitNation$x, decreasing=T)
visitNation[,sortByNation)]
visitNation[,sortByNation]
visitNation[,,sortByNation]
sortByNation <- order(visitNation$x, decreasing=T)
visitNation[,,sortByNation]
head(visitNation[,,sortByNation])
sortByNation <- order(visitNation$x, decreasing=T)
visitNation <- aggregate(trainData$dateChar, list(trainData$nation, trainData$touristID), FUN=length)
system.time(
visitNation <- aggregate(trainData$dateChar, list(trainData$nation, trainData$touristID), FUN=length)
)
visitNation
sortByNation <- order(visitNation$x, decreasing=T)
head(visitNation[,,sortByNation])
sortByNation <- order(visitNation$x, decreasing=T)
head(visitNation)
visit <- table(visitNation$Group.1)
visit
header(visit[visitNation[,,order(visitNation$x, decreasing=T)],20] )
head(visit[visitNation[,,order(visitNation$x, decreasing=T)],]20 )
head(visit[visitNation[,,order(visitNation$x, decreasing=T)],],20 )
head(visit[visitNation[,,order(visitNation$x, decreasing=T)],20] )
trainData <- read.csv("data/trainData.csv", stringsAsFactors = F, na.strings="NA")
trainData
head(trainData,20)
Top5touristID_List <- aggregate(trainData$dateChar , by=list(trainData$touristID), FUN=length)
Top5touristID_List
head(Top5touristID_List)
Top5Order <- order(Top5touristID_List$x, decreasing=TRUE)
Top5Order
head(Top5touristID_list[,Top5Order],5)
head(Top5touristID_List[,Top5Order],5)
head(Top5touristID_List[Top5Order,],5)
touristCount_List <- aggregate(trainData$dateChar, by=list(tourist=trainData$touristID, nation=trainData$nation), FUN=length)
head(touristCount_List)
tourCount <- order(touristCount_List$x, decreasing=TRUE)
head(touristCount_List[tourCount,,],5)
head(touristCount_List[tourCount,,],10)
head(touristCount_List[tourCount,,],100)
head(touristCount_List)
head(touristCount_List[,,tourCount])
head(touristCount_List[,,tourCount], 10)
tourCount <- order(touristCount_List$x, decreasing=TRUE)
head(touristCount_List[,,tourCount], 10)
head(touristCount_List[,tourCount,], 10)
head(touristCount_List[tourCount,,], 10)
head(Top5touristID_List[Top5Order,],5)
head(touristCount_List[tourCount,,], 10)
nationCount <- table(touristCount_List)
nationCount
nationCount <- table(touristCount_List$nation)
nationCount
barplot(nationCount)
str(nationCount)
str(nationCount$China)
nationCount$China
is.data.frame(nationCount)
is.list(nationCount)
is.matrix(nationCount)
is.vector(nationCount)
is.table(nationCount)
nationCount[1]
max(nationCount)
nationCount
tourOrder <- order(touristCount_List$x, decreasing=TRUE)
head(touristCount_List[,,tourOrder],20)
diffCount <- aggregate(touristCount_List$x, by=touristCount_List$nation, FUN=sum)
diffCount <- aggregate(touristCount_List$x, by=list(touristCount_List$nation), FUN=sum)
head(diffCount)
nationCount
head(diffCount)
diffCount[1,2] - diffCount[2,2]
diffCount[1,2]
diffCount[2,2] - diffCount[5,2]
diffCount[tourOrder,]
diffCount[,tourOrder]
diffCount[diffCount$x, decreasing=T]
diffCount$x
touristCount_List[diffCount$x, decreasing=T]
diffCount[order(diffCount$x, decreasing=T),]
trainData$dateChar <- strptime(trainData$dateChar, format="%Y%m/%d")
trainData$dateChar
trainData <- read.csv("data/trainData.csv", stringsAsFactors = F, na.strings="NA")
View(trainData)
test <- strptime("2014/1230", format="%Y/%m%d")
test
trainData$dateChar <- strptime(trainData$dateChar, format="%Y/%m%d")
trainData$dateChar
trainData$dateChar$wday
trainData[,"wday"] <- trainData$dateChar$wday
View(trainData)
trainData$wday <- as.factor(trainData$wday, labels = c("월","화","수","목","금","토","일"))
trainData$wday <- as.factor(trainData$wday, levels=c(1:6,0), ordered=T, labels = c("월","화","수","목","금","토","일"))
trainData$wday <- factor(trainData$wday, levels=c(1:6,0), ordered=T, labels = c("월","화","수","목","금","토","일"))
View(trainData)
head(trainData)
maxCallCount <- aggregate(trainData$dateChar, by=list(trainData$wday), FUN=length)
head(maxCallCount)
maxOrder <- order(maxCallCount$x, decreasing=T)
maxCallCount[order(maxOrder, decreasing=T),]
timeTest <- strptime("1811-36", format="%H%M-%S")
timeTest
trainData$timeChar <- strptime(trainData$timeChar, format="%H%M-%S")
trainData$timeChar
occurCall <- aggregate(trainData$touristID, by=list(trainData$timeChar), FUN=length)
occurCall <- aggregate(trainData$timeChar, by=list(trainData$touristID), FUN=length)
occurCall
occurCall <- aggregate(trainData$nation, by=list(trainData$touristID, trainData$timeChar), FUN=length)
occurCall <- aggregate(trainData$timeChar, by=list(trainData$touristID, ), FUN=length)
occurCall <- aggregate(trainData$touristID, by=list(trainData$timeChar), FUN=)
occurCall <- aggregate(trainData$touristID, by=list(trainData$timeChar), FUN=length)
occurCall <- aggregate(trainData$touristID, by=list(strttime(trainData$timeChar), FUN=length)
occurCall <- aggregate(trainData$touristID, by=list(strttime(trainData$timeChar), FUN=length)
occurCall <- aggregate(trainData$touristID, by=list(strftime(trainData$timeChar), FUN=length)
occurCall <- aggregate(trainData$touristID, by=list(strftime(trainData$timeChar), FUN=length)
occurCall <- aggregate(trainData$touristID, by=list(strftime(trainData$timeChar, format"%S"), FUN=length)
strftime
?strftime
occurCall <- aggregate(trainData$touristID, by=list(strftime(trainData$timeChar, format="ddmmmyyyy"), FUN=length)
occurCall <- aggregate(trainData$touristID, by=list(strftime(trainData$timeChar, format="ddmmmyyyy"), FUN=length)
occurCall <- aggregate(trainData$touristID, by=list(strftime(trainData$timeChar, format="ddmmmyyyy"), FUN=length)
occurCall <- aggregate(trainData$touristID, by=list(strftime(trainData$timeChar, format="ddmmmyyyy")), FUN=length)
occurCall <- aggregate(trainData$touristID, by=list(strftime(trainData$timeChar, format="ddmmmyyyy")), FUN=length)
occurCall
strftime(trainData$timeChar, format="ddmmmyyyy")
occurCall <- aggregate(trainData$touristID, by=list(trainData$timeChar), FUN=count)
occurCall <- aggregate(trainData$touristID, by=list(trainData$timeChar), FUN=sum)
View(trainData)
trainData <- read.csv("data/trainData.csv", stringsAsFactors = F, na.strings="NA")
trainData$timestamp <- strptime(paste0(trainData$dateChar," ", trainData$timeChar),
format="%Y/%m%d %H%M-%S")
trainData[,"wday"] <- trainData$timestamp$wday
trainData$wday <- factor(trainData$wday, levels=c(1:6,0), ordered=T, labels = c("월","화","수","목","금","토","일"))
head(trainData)
maxCallCount <- aggregate(trainData$timestamp, by=list(trainData$wday), FUN=length)
head(maxCallCount)
maxOrder <- order(maxCallCount$x, decreasing=T)
maxCallCount[order(maxOrder, decreasing=T),]
trainData[,"hour"] <- trainData$timestamp$hour
View(trainData)
bikeDataFull
by=list(hour=trainData$hour),
hourCall <- aggregate(trainData$timestamp,by=list(hour=trainData$hour),FUN=length)
hourCall
plot(hourCall, type="l")
test1 <- tapply(trainData$timestamp, trainData$touristID, mean, na.rm=T)
test1 <- tapply(trainData$timestamp, trainData$touristID, length, na.rm=T)
touristCall <- aggregate(trainData$timestamp, by=list(ID=trainData$touristID, wday=trainData$wday), FUN=length)
head(touristCall)
library(reshape)
weekdayCall <- cast(touristCall, ID ~ wday, value="x", fun.aggregate=sum)
weekdayCall
head(weekdayCall)
dataFrameCall <- cast(touristCall, ID ~ wday, value="x", fun.aggregate=sum)
head(dataFrameCall)
dataFrameCall[,"weekdayCall"] <- apply(dataFrameCall[,2:8],1,sum)
dataFrameCall[,"weekdayCall"] <- apply(dataFrameCall[,2:6],1,sum)
dataFrameCall[,"weekendCall"] <- apply(dataFrameCall[,7:8],1,sum)
head(dataFrameCall)
save(dataFrameCall, file="./dataSmpl/weekData.RData")
save(dataFrameCall, file="./data/weekData.RData")
is.list(touristCall)
touristCall
is.matrix(touristCall)
is.data.frame(touristCall)
nationBycall <- aggregate(trainData$nation, by=list(trainData$city), FUN=length)
head(nationBycall)
nationBycall <- aggregate(trainData$nation, by=list(trainData$city), FUN=sum)
dataframetest <- cast(nationBycall, Group.1, value="x", fun.aggregate=sum)
nationBycall <- aggregate(trainData$nation, by=list(city=trainData$city), FUN=length)
head(nationBycall)
nationBycall <- aggregate(trainData$city, by=list(nation=trainData$nation), FUN=length)
head(nationBycall)
dataframetest <- cast(nationBycall, nation, value="x", fun.aggregate=sum)
dataframetest <- cast(nationBycall, nation, value="x", fun.aggregate=sum)
dataframetest <- cast(nationBycall, nationBycall$nation, value="x", fun.aggregate=sum)
nationBycall <- aggregate(trainData$city, by=list(nation=trainData$nation), FUN=length)
head(nationBycall)
dataframetest <- cast(nationBycall, nation, value="x", fun.aggregate=sum)
dataframetest <- cast(nationBycall, nation, value="x", fun.aggregate=sum)
nationBycall <- aggregate(trainData$timestamp, by=list(city=trainData$city, nation=trainData$nation), FUN=length)
head(nationBycall)
dataframetest <- cast(nationBycall, city~nation, value="x", fun.aggregate=sum)
dataframetest
nationBycall
dataframetest2
dataframetest2 <- <- cast(nationBycall, city~nation, value="x", fun.aggregate=length)
dataframetest2  <- cast(nationBycall, city~nation, value="x", fun.aggregate=length)
dataframetest2
dataframetest
dataframetest[,"citySum"] <- apply(nationBycall[,2:11],1,sum)
dataframetest[,"citySum"] <- apply(dataframetest[,2:11],1,sum)
head(dataframetest)
dataframetest[,"Percent"] <- data.frame(city=dataframetest$city,dataframetest[,2:11]/ dataframetest$citySum)
dataframetest[,"Percent"] <- data.frame(city=dataframetest$city,dataframetest[,2:11]/ dataframetest$citySum)
dataframetest[,"Percent"] <- data.frame(city=dataframetest$city,dataframetest[,2:11]/dataframetest$citySum)
dataframetest$citySum <- apply(dataframetest[,2:11],1,sum)
dataframetest$nationCallRate <- apply(dataframetest[,])
dataframetest$Percent <- data.frame(city=dataframetest$city,dataframetest[,2:11]/dataframetest$citySum)
head(dataframetest)
test <- data.frame(1,2,3,4,5)
test
head(dataframetest)
dataframetest[,"citySum"] <- cast(nationBycall, city~nation, value="x", fun.aggregate=sum)
dataframetest[,"citySum"] <- cast(nationBycall, city~nation, value="x", fun.aggregate=sum)
library(reshape)
dataframetest[,"citySum"] <- cast(nationBycall, city~nation, value="x", fun.aggregate=sum)
dataframetest <- cast(nationBycall, city~nation, value="x", fun.aggregate=sum)
dataframetest
dataframetest[,"CitySum"] <- cast(nationBycall, city~nation, value="x", fun.aggregate=sum)
dataframetest[,"CitySum"] <- cast(dataframetest[,"CitySum"], city~nation, value="x", fun.aggregate=sum)
dataframetest[,"CitySum"] <- cast(dataframetest$CitySum, city~nation, value="x", fun.aggregate=sum)
install.packages("RODBC")
library(RODBC)
db <- odbcConnect("lahman", uid="root", pwd="1234")
sqlTables(db)
Top5touristID_List <- aggregate(trainData$dateChar , by=list(trainData$touristID), FUN=length)
library(dplyr)
trainData<- read.csv("data/trainData.csv")
uniqIdAggr <- group_by(trainData, touristID)
head(uniqIdAggr)
uniqIdAggr <- summary(uniqIdAggr, x=length(uniqIdAggr$touristID))
head(uniqIdAggr)
head(uniqIdAggr)
uniqIdAggr <- summary(uniqIdAggr, tourstID, x=length(uniqIdAggr$touristID))
uniqIdAggr <- group_by(trainData, touristID)
uniqIdSumm <- summary(uniqIdAggr, tourstID, x=length(uniqIdAggr$touristID))
head(uniqIdAggr)
uniqIdSumm <- summary(uniqIdAggr, x=length(touristID))
head(uniqIdAggr)
uniqIdSumm <- summarise(uniqIdAggr, x=length(dateChar))
head(uniqIdSumm)
uniqIdArrange <- arrange(uniqIdSumm, desc(x))
head(uniqIdArrange)
idNationAggr <- group_by(trainData, touristID, nation)
idNationSumm <- summarise(idNationAggr, x = dateChar)
idNationSumm <- summarise(idNationAggr, x=length(dateChar))
head(idNationSumm)
idnationArrange <- arrange(idnationSumm, desc(x))
idnationArrange <- arrange(idNationSumm, desc(x))
head(idnationArrange)
idnationArrange <- arrange(idNationSumm, desc(x))
head(idnationArrange)
idNationSumm <- summarise(idNationAggr, x=length(touristID))
head(idNationSumm)
idnationArrange <- arrange(idNationSumm, desc(x))
head(idnationArrange)
idnationTable <- table(idNationSumm$nation)
head(idnationTable)
head(idnationTable)
hist(idnationTable)
head(idnationTable)
idnationTable
head(idNationSumm[arrange(idNationSumm,desc(x)), ],20)
arrange(idNationSumm,desc(x)
arrange(idNationSumm,desc(x))
arrange(idNationSumm,desc(x))
trainData <- read.csv("data/trainData.csv", stringsAsFactors = F, na.strings="NA")
head(trainData,20)
Top5touristID_List <- aggregate(trainData$dateChar , by=list(trainData$touristID), FUN=length)
