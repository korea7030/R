{
    "contents" : "# ====================================\n# Varaiables, Vectors\n#====================================\n# Variables\na<-1\na \nprint(a) \n(b<-1) \n\n# Vectors\nx<-c(\"fee\",\"fie\",\"foe\",\"fum\")\n\n\nc(\"Everyone\", \"loves\", \"stats.\",1) \n\nc(1,1,1,1,1,1,\"a\")\n\nc(1,1,2,3,5,8,13,21)\n\nc(1*pi, 2*pi, 3*pi, 4*pi) ## pi = 3.141592\n\n## TRUE,T = 1, FALSE,F = 0 \n\nc(TRUE, TRUE, FALSE&T,T|2,3)\n\nv1<-c(1,2,3)\nv2<-c(4,5)\nv3<-c(v1,v2) # 1,2,3,4,5\nv3\n\nprint(v1+v2) # 5,7,7\nprint(v1*v2) # 4,10,12\nv1^2 # 1, 4, 9\n\n#====================================\n# sequence\n#====================================\n1:5\nb<-2:10\nb\n\n10:19\n9:-1\n\ne<-10:2\ne\n\nseq(from=0,to=20,by=2)  ## 2씩 증가\nseq(from=0,to=20,length.out=5)   ## 1~20  사이의 구간 \n\nseq(from=0,to=20,length=5)\n\nseq(from=1,to=2,length.out=5)\n\nseq(from=1,to=2,length=5)\n\nseq(from=1,to=10,by=1)\nseq(from=0,to=10,length.out=20)\n\n(x<-seq(from=0,to=10,length.out=21))\n\nn<-0\n1:n\n\n?rep\nrep(1,times=5)\nrep(1:2,times=2)\n\n\nrep(c)\n\nc<-1:5\nrep(c,5)\n\nrep(c,each=5)\n\nrep(1:2,each=4)\n\n#====================================\n# type of, mode, class\n#====================================\na<-3\na\n\nb<-\"Character\"\nb\n\npaste(\"a\",\"b\", sep = \" \")\npaste0(\"a\",\"b\")\n\nA<-c(\"a\", \"b\", \"c\")\nA\npaste(A,c(\"d\",\"e\"))\n\npaste(c(\"a\", \"b\", \"c\"), c(\"d\",\"e\"))\n\nf<-paste(A,10)\nf\n\nhp_1\nhp_2\nhp_3\n\nrm(i)\n\nfor (i in 1:4) {\n  assign(paste0(\"hp_\",i),i*2)  \n}\n\ni\n\nhp_1\nhp_2\n\nname2\nname10 \n\nls()\nassign(paste0(\"name\",1),1)\n\nA\n\npaste(A,10,sep=\"\")\npaste(A,1:10,sep=\"\")\n?paste\n\npaste(c(\"a\",\"b\",\"c\"),1:10,sep=\"\")\n\npaste(\"Everybody\",\"loves\",\"cats.\")\npaste(\"Everybody\",\"loves\",\"cats.\",sep=\"-\")\npaste(\"Everybody\",\"loves\",\"cats.\",sep=\"\")\n\n#====================================\n# Substr\n#====================================\nsubstr(\"BigDataAnalysis\",2,4)\n?substr\n\nss<-c(\"Moe\",\"Larry\",\"Curly\")\nsubstr(ss,1,3)\n\n#====================================\n# Boolean(logical)\n#====================================\nc<-TRUE\nc\nstr(c)\n\nd<-T\nd\n\n\ne<-FALSE\ne\n\nf<-F\nF\n\na<-3\na==pi\na!=pi\na<pi\na>pi\na<=pi\na>=pi\n\n#====================================\n# matrix\n#====================================\ntheData<-c(1.1, 1.2, 2.1, 2.2, 3.1, 3.2)\n\nmat<-matrix(theData,2,3)\n\nmat\n\ndim(mat)\n\nt(mat)\n\nmat%*%t(mat)\n\n?diag\ndiag(mat)\n\nmat[1,]\n\nmat[,3]\n\n?colnames\ncolnames(mat)<-c(\"IBM\",\"MSFT\",\"GOOG\")\nrownames(mat)<-c(\"JAN\",\"FEB\")\nmat\n\nA<-matrix(0,4,5)\nA\n\nmatrix(1:20,4,5)\nA<-matrix(1:20,4,5, byrow = TRUE)\nA\n\nA[c(1,4),c(2,3)] \n\nA[c(1,4),c(2,3)] <- 1\nA\n\nA + 1\n\n#====================================\n# list\n#====================================\n\n\nlst<-list(3.14,\"Moe\",c(1,1,2,3),mean)\nlst\nlst[[1]]\na <- 1:10\nb <- matrix(1:10,2,5)\nc <- c(\"name1\",\"name2\")\n\nalst<-list(\"KS\"=a,b=b,c=c)\nattach(alst)\n\nalst\nalst$KS\nalst[[1]]\n\nalst[[1]][2]\n\nalst[[2]]\n\nblst<-list(d=2:10*10)\nblst\nablst<-c(alst,blst)\nablst\nstr(ablst)\n\nscore1<-list(10,20,30,40,50)\nscore2<-list(c(\"a\",\"b\"))\n\nscore1[score1>40]\n\nscore12<-list(c(score1,score2))\nscore12\n\nscore12[1]\nscore12[[1]]\nscore12[[1]][1]\nscore12[[2]][2]\n\nscore12[[2]]\nscore12[[2]][1]\n\nunlist(score1)\n\nunlist(score2)\nunlist(score12)\n\n### data frame\n\na=c(1,2,2,3)\nb=c(4.1,3,2,1.1)\nd=c(\"A\",\"B\",\"C\",\"F\")\nc=data.frame(a,b,d)\n?data.frame\nc\n\n\ndim(c)\nstr(c)\n\n# 조회\n\nc[1,2]\nc[2,\"a\"]\nc[2,`a`]\nc$a\nc[c$a==2,]\n\nc[`a`==2,]\n\nc[\"a\"==2,]\n\n# rbind, cbind\ndatairis <- data(iris)\n\nView(iris, \"X\")\nhead(iris) \n\niris\n\n?iris\ndim(iris)\nsummary(iris)\n\nstr(iris)\n\nnew_R<-data.frame(Sepal.Length=3.5, Sepal.Width=4.1, Petal.Length=2.1, Petal.Width=0.5, Species= \"newversicolor\" )\nnew_R2 <- data.frame(3.5, 4.1, 2.1, 0.5, \"newversicolor\" )\nnew_R\n\niris2 <- iris\n\nhead(iris2)\n\ndim(cbind(iris, iris2))\n\nhead(iris)\ntail(iris) # 마지막 2개 observation 조회\n\nnR_iris<-rbind(iris,new_R2)\n\ndim(nR_iris)\n\nhead(iris)\n\na <- iris[-150,]\na\n\niris[,-4]\n\ntail(nR_iris,2)\ndim(nR_iris)\n\nnew_C<-1:151\nnew_C\nnRC_iris<-cbind(nR_iris,new_C)\nhead(nRC_iris,2) # 처음 2개 observation 조회\nstr(nRC_iris)\n\nsave(list = ls(), file=\"list_Data.RData\")\n\n\n# subset\ndata(iris)\n\nhead(iris)\n## subset(data, select=가져올컬럼, subset=가져올데이터범위?)\n## select 는 가져올 컬럼을 의미\n## subset 부분은 어떤 데이터를 가져올지 지정\n## select와 subset의 위치는 바뀔 수 있음.\nsubset(iris,select=Species,subset=(Petal.Length>5.0))\n\na<- subset(iris,subset=c(Sepal.Width==3.0 & Petal.Width==0.2),select=c(Sepal.Length,Petal.Length,Species))\n\nhead(a)\n\niris[iris$Sepal.Width==3.0 & iris$Petal.Width==0.2,-Petal.Width]\niris\n\nhead(iris)\ndatairis <- iris\n\n# \n\ngrepsubset <- subset(movies, subset= (movies$title == \"%main%\"), select = movies$title)\n\nhead(grepsubset)\ndata(iris)\nlibrary(datasets)\nattach(iris) ## R에 올라와있는 Object의 search path를 지정 \n\niris[Sepal.Width==3.0&Petal.Width==0.2,]\n? attach\n\nA[\"a\"]\n\n# merge(df1, df2, by=\"df1와 df1의 공통된 열의 이름\")\nmrg_iris_org<-cbind(no=1:30,iris[c(1:10,51:60,101:110),])\n\nhead(mrg_iris_org,2)\ntail(mrg_iris_org,2)\n\nmrg_iris_1<-mrg_iris_org[,c(1,2,3)]\nmrg_iris_1_ex <- mrg_iris_org[-1, c(1,2,3)]\n\nhead(mrg_iris_1,2)\nhead(mrg_iris_1_ex,2)\n\nmrg_iris_2<-mrg_iris_org[,c(1,4,5,6)]\n\nhead(mrg_iris_2,2)\n\nmrg_iris_12<-merge(mrg_iris_1_ex,mrg_iris_2,by=\"no\")\n\nhead(mrg_iris_12,2)\nhead(mrg_iris_org,2)\n\n?merge\n\nmrg_iris_12==mrg_iris_org\ntable(mrg_iris_12==mrg_iris_org)\n\n# grep(조회할 문자패턴, data)\ninstall.packages(\"ggplot2\")\ndata(movies,package=\"ggplot2\") # ggplot2 패키지에서 movies data를 가져오라는 명령어\nhead(movies,2)\n\nhead(movies[grep(\"main\",movies$title, ignore.case=F),\"title\"])\n\nattach(movies)\n# movies[,year]\nstr(movies)\n\n?grep\n# \n# grep(\"main\",movies$title)\n# \n# head(movies[grep(\"Main \",movies$title, ignore.case=F),\"title\"])\n# \n# grep(\"Main \",movies$title)\n\n#====================================\n# vector, display subset\n#====================================\nfib<-c(0,1,1,2,3,5,8,13,21,34)\nfib[-1]\nfib[-c(1:3)]\nfib\n\nfib%%2==0\nfib%%2==1\n\nfib[fib%%2==0]\n\n## 위치\n(which(fib%%2 == 0))\n\nfib[(which(fib%%2 == 0))]\n\nfib[fib%%2==1]\n\n## e) 자료형, 데이터 구조 변환하기\n\na<-\"2.78\"\na\nclass(a)\n\nas.numeric(a)\nclass(as.numeric(a))\n\nas.numeric(\"a\")\n\n\n\n# 숫자 -> 문자\nb<-2.78\nb\nclass(b)\nas.character(b)\n\n## boolean \nas.numeric(TRUE)\n\nas.numeric(T)\nas.numeric(F)\n\n\n### 날짜로 변환(as.Date)\n# 문자열날짜 > 날짜형태 변환\nc<-\"2020-01-01\"\nc\nclass(c)\nc1<-as.Date(c)\nc1\nclass(c1)\n\ne <- \"2020-01-02\" \ne\ne1 <- as.Date(e)\n\ne1 - c1 \n\nc1 > e1\n\nd<-\"01312020.\"\nd1<-as.Date(d,format=\"%m%d%Y.\")\nd1\n\n# format(날짜,포맷)\n# as.character()\n\nas.Date(\"31/01/2020\",format=\"%d/%m/%Y\")\n\n\nstring <- \"31/01/2020 10:20:20\"\n\nstrpdata <- strptime(string, format=\"%d/%m/%Y %H:%M:%S\")\n\nstrpdata$hour\nstrpdata$wday\nstrpdata$mon\n\nstr(strpdata)\nlst <- as.list(strpdata)\n\nstr(lst)\nlst$sec\n\nformat(Sys.Date(),format=\"%d/%m/%Y\")\nformat(Sys.Date(),'%a') # 요일\nformat(Sys.Date(),'%b') # 월수(7월)\nformat(Sys.Date(),'%B') # 월\nformat(Sys.Date(),'%d')\nformat(Sys.Date(),'%m')\nformat(Sys.Date(),'%y')\nformat(Sys.Date(),'%Y')\n\n?Sys.Date()\n\nstr(Sys.Date())\n?strptime\n\n## f) Missing data\n\n# NA, NaN \n#  NA : 쓰레기값 \n#  NaN(Not a Number) : 연산오류\n\na<-0/0\na\n\nis.nan(a)\nis.na(a)\n\nb<-log(0)\nb\n\n?is.finite\n\nis.finite(b)\n\nis.nan(b)\nis.na(b)\n\nc<-NA\nis.na(c)\nis.nan(c)\n\nd<-c(1:3,NA)\nd\n\nis.na(d)\n\n\n## g) 벡터의 기본 연산\n\nv1<-c(1,3,5,7,9,11,20)\nv1*v1\n\n(v2<-v1+v1^2)\nv2<-v1+v1^2\n(v3<-1+v1+v1^3)\n\nmean(v1)\nmedian(v1)\nsd(v1)\nvar(v1)\nsum((v1-mean(v1))^2)/(length(v1)-1)\n\ncor(v1,v2)\n\n\ncov(v1,v3)\n?cov\n\n## h) 파일 읽기 등\nv1\nv4<-as.data.frame(v1)\n\n# write.csv(변수이름, “지정할 파일이름.csv”)\n# read.csv(\"저장된 파일이름.csv\")\nwrite.csv(v4,\"v4.csv\")\n\n\nv5<-read.csv(\"v4.csv\")\nv5\n\n\n?read.table\n\nv6<-as.vector(v4)\nv7<-as.vector(v5$v1)\n\nv6==v7\n\n# save(변수이름, file=\"지정할 데이터 파일이름.Rdata\")\n# load(\"저장된 파일이름.Rdata\")\nsave(v4,v5,file=\"v.rdata\")\n\nload(\"v.rdata\")\n## \nrm(list=ls(v4))\n\n(v8<-as.list(v4))\n(v9<-as.list(v5))\n\n\nv8$v1==v9$v1\nv8[[1]]==v9[[2]]\n\n# rm(object 명)\nrm(v4,v5)\nrm(list=ls()) # 모두 지우기\n\n# summary\ndata(iris)\nsummary(iris) # 열별 data 요약\n\n# install.packages(\"package명\"): package설치\ninstall.packages(\"party\")\ninstall.packages(\"party\")\n\n# library(package명): package를 memory에 load\nlibrary(party)\n\n# vignette(“알고싶은 package이름”): party에 대한 tutorial pdf파일\nvignette(\"party\")\n\n# q(): R 종료\n\nsave(v4,file=\"./test/v5.rdata\")\nload(\"v5.rdata\")\n\ngetwd()\nsetwd(\"C:/Users/user/Documents\")\n\nq()\n#  save(mrg_iris_1, file=\"mrg.rdata\")\n## ",
    "created" : 1435237441587.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1931623240",
    "id" : "CB9D3DA5",
    "lastKnownWriteTime" : 1435977115,
    "path" : "C:/RCodeRepositories/RSpclecture1/01.Basic Script.R",
    "project_path" : "01.Basic Script.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}