biplot(pcm1, choices=c(1,3))
dm_data <- read.csv("DM_data.csv", header=T)
head(dm_data)
str(dm_data)
subset_dm <- subset(dm_data,
select = c(T_ID,T_SEX,T_AGE,T_HTN,T_HTNAG,T_HTNCU,T_DM,T_DMAG,T_DMCU,T_LIP,T_LIPAG,T_LIPCU,T_FMFDM1,T_FMFDM2,T_FMFDM3,T_FMFDM4,T_DRINK,T_DRQYR,T_DRDU,T_SOJUFQ,T_BEERFQ,T_SOJUAM,T_BEERAM,T_EAT2,T_EAT3,T_EAT4,T_FRY,T_EXER,T_CHILDNO,BMI, T_SBP, T_DBP, T_HDL, T_LDL, T_SS01, T_SS02, T_SS03, T_SS04, T_SS05, T_SS10, T_SS24),
subset= !is.na(T_LDL) &  !is.na(T_SBP) & !is.na(T_DBP))
nrow(subset_dm)
subset_dm_1 <- subset(subset_dm, select = c(BMI, T_SBP, T_DBP, T_HDL, T_LDL))
is.na(subset_dm_1)
pairs(subset_dm_1)
pcm1 <- prcomp(subset_dm_1, scale=T)
pcm1
summary(pcm1)
par(mfrow=c(1,4))
barplot(pcm1$rotation[,1], main ="PC1", col= c(2,3,4,5,6))  # 종합적으로 당뇨와 관련
barplot(pcm1$rotation[,2], main ="PC2", col= c(2,3,4,5,6))  # HDL, LDL : 음의방향, BMI : 양의방향
barplot(pcm1$rotation[,3], main ="PC3", col= c(2,3,4,5,6))  # BMI, LDL : 강한 음의방향
barplot(pcm1$rotation[,4], main ="PC4", col= c(2,3,4,5,6))  # BMI, HDL : 강한 양의방향, LDL : 음의방향
par(mfrow=c(1,1))
biplot(pcm1, choices=c(1,2))
biplot(pcm1, choices=c(1,3))
biplot(pcm1, choices=c(1,4))
biplot(pcm1, choices=c(1,2))
biplot(pcm1, choices=c(1,3))
plot(pcm1, type="l")
summary(pcm1)
biplot(pcm1, choices=c(1,3))
plot(pcm1$x[,1])
biplot(pcm1, choices=c(1,3))
biplot(pcm1, choices=c(1,2))
biplot(pcm1, choices=c(1,4))
plot(pcm1$x[,2])
plot(pcm1$x[,3])
plot(pcm1$x[,4])
pcm1$scale
biplot(pcm1, choices=c(1,2))
biplot(pcm1, choices=c(1,3))
biplot(pcm1, choices=c(1,4))
?biplot
biplot(pcm1, choices=c(1,2), col =subset_dm$T_SEX )
unique(subset_dm$T_SEX)
biplot(pcm1, choices=c(1,2))
biplot(pcm1, choices=c(1,2))
biplot(pcm1, choices=c(1,3))
biplot(pcm1, choices=c(1,4))
biplot(pcm1, choices=c(1,2))
unique(subset_dm_1)
pcm1$scale
plot(pcm1, type="l")
str(dm_data)
subset_dm_1$PC1 <- pcm1$x[,1]
plot(pcm1, type="l")
plot(pcm1$x[,1], pcm1$x[,2])
plot(pcm1, type="l")
screeplot(pcm1)
screeplot(pcm1, type="l")
par(mfrow=c(1,4))
barplot(pcm1$rotation[,1], main ="PC1", col= c(2,3,4,5,6))  # 종합적으로 당뇨와 관련
barplot(pcm1$rotation[,2], main ="PC2", col= c(2,3,4,5,6))  # HDL, LDL : 음의방향, BMI : 양의방향
barplot(pcm1$rotation[,3], main ="PC3", col= c(2,3,4,5,6))  # BMI, LDL : 강한 음의방향
barplot(pcm1$rotation[,4], main ="PC4", col= c(2,3,4,5,6))  # BMI, HDL : 강한 양의방향, LDL : 음의방향
subset_dm_1$PC2 <- pcm1$x[,2]
subset_dm_1$PC3 <- pcm1$x[,3]
lm(data = subset_dm_1, formula = PC1~BMI+T_SBP+T_DBP+T_HDL+T_LDL)
lm_pc2 <- lm(data = subset_dm_1, formula = PC2~BMI+T_SBP+T_DBP+T_HDL+T_LDL)
lm_pc3 <- lm(data = subset_dm_1, formula = PC3~BMI+T_SBP+T_DBP+T_HDL+T_LDL)
summary(lm_pc1)
lm_pc1 <- lm(data = subset_dm_1, formula = PC1~BMI+T_SBP+T_DBP+T_HDL+T_LDL)
lm_pc2 <- lm(data = subset_dm_1, formula = PC2~BMI+T_SBP+T_DBP+T_HDL+T_LDL)
lm_pc3 <- lm(data = subset_dm_1, formula = PC3~BMI+T_SBP+T_DBP+T_HDL+T_LDL)
summary(lm_pc1)
summary(lm_pc2)
lm_pc1 <- lm(data = subset_dm_1, formula = PC1~BMI)
summary(lm_pc1)
lm_pc1 <- lm(data = subset_dm_1, formula = PC1~BMI+T_SBP+T_DBP)
summary(lm_pc1)
lm_pc2 <- lm(data = subset_dm_1, formula = PC2~BMI+T_HDL+T_LDL)
summary(lm_pc2)
lm_pc2 <- lm(data = subset_dm_1, formula = PC2~BMI+T_HDL)
summary(lm_pc2)
lm_pc2 <- lm(data = subset_dm_1, formula = PC2~BMI+T_HDL+T_LDL)
lm_pc3 <- lm(data = subset_dm_1, formula = PC3~BMI+T_LDL)
summary(lm_pc3)
lm_pc2 <- lm(data = subset_dm_1, formula = PC2~BMI+T_HDL+T_LDL)
summary(lm_pc2)
lm_pc1 <- lm(data = subset_dm_1, formula = PC1~BMI+T_SBP+T_DBP)
summary(lm_pc1)
summary(lm_pc2) # BMI, T_HDL, T_LDL
summary(lm_pc1) # BMI, T_SBP, T_DBP 에 의해
option(digit=2)
options(digit=2)
summary(lm_pc1) # BMI, T_SBP, T_DBP 에 의해
summary(lm_pc2) # BMI, T_HDL, T_LDL
summary(lm_pc3) # BMO, T_LDL
summary(lm_pc1) # BMI, T_SBP, T_DBP 에 의해
summary(lm_pc2) # BMI, T_HDL, T_LDL
summary(lm_pc3) # BMO, T_LDL
summary(lm_pc1) # BMI, T_SBP, T_DBP 에 의해
screeplot(pcm1, type="l")
screeplot(pcm1, type="l")
summary(lm_pc3) # BMO, T_LDL
summary(lm_pc2) # BMI, T_HDL, T_LDL
summary(lm_pc1) # BMI, T_SBP, T_DBP 에 의해
summary(lm_pc2) # BMI, T_HDL, T_LDL
par(mfrow=c(1,4))
barplot(pcm1$rotation[,1], main ="PC1", col= c(2,3,4,5,6))  # 종합적으로 당뇨와 관련
barplot(pcm1$rotation[,2], main ="PC2", col= c(2,3,4,5,6))  # HDL, LDL : 음의방향, BMI : 양의방향
barplot(pcm1$rotation[,4], main ="PC4", col= c(2,3,4,5,6))  # BMI, HDL : 강한 양의방향, LDL : 음의방향
barplot(pcm1$rotation[,3], main ="PC3", col= c(2,3,4,5,6))  # BMI, LDL : 강한 음의방향
lm_pc2 <- lm(data = subset_dm_1, formula = PC2~BMI+T_HDL)
lm_pc3 <- lm(data = subset_dm_1, formula = PC3~BMI+T_LDL)
summary(lm_pc1) # BMI, T_SBP, T_DBP 에 의해
summary(lm_pc2) # BMI, T_HDL, T_LDL
summary(lm_pc3) # BMO, T_LDL
summary(lm_pc2) # BMI, T_HDL, T_LDL
par(mfrow=c(1,4))
barplot(pcm1$rotation[,1], main ="PC1", col= c(2,3,4,5,6))  # 종합적으로 당뇨와 관련
barplot(pcm1$rotation[,2], main ="PC2", col= c(2,3,4,5,6))  # HDL, LDL : 음의방향 : 합병증 발생에 기여
barplot(pcm1$rotation[,3], main ="PC3", col= c(2,3,4,5,6))  # BMI, LDL : 강한 음의방향
barplot(pcm1$rotation[,4], main ="PC4", col= c(2,3,4,5,6))  # BMI, HDL : 강한 양의방향, LDL : 음의방향
lm_pc3 <- lm(data = subset_dm_1, formula = PC3~BMI+T_LDL)
summary(lm_pc3) # BMO, T_LDL
summary(lm_pc2) # BMI, T_HDL, T_LDL
# lm_pc2의 회귀식 : 1.132 + 0.1396BMI - 0.0648T_HDL - 0.0147LDL
summary(lm_pc2) # BMI, T_HDL, T_LDL
lm_pc2 <- lm(data = subset_dm_1, formula = PC2~BMI+T_HDL+T_LDL)
summary(lm_pc2) # BMI, T_HDL, T_LDL
pairs(subset_dm_1)
subset_dm2 <- subset(dm_data,
select = c(T_DM,T_DMAG,T_DMCU, T_FMFDM1,T_FMFDM2,T_FMFDM3,T_FMFDM4),
subset= !is.na(T_DMAG) &  !is.na(T_DMCU) & !is.na(T_DMCU))
dm_data <- read.csv("DM_data.csv", header=T)
head(dm_data)
str(dm_data)
subset_dm <- subset(dm_data,
select = c(T_ID,T_SEX,T_AGE,T_HTN,T_HTNAG,T_HTNCU,T_DM,T_DMAG,T_DMCU,T_LIP,T_LIPAG,T_LIPCU,T_FMFDM1,T_FMFDM2,T_FMFDM3,T_FMFDM4,T_DRINK,T_DRQYR,T_DRDU,T_SOJUFQ,T_BEERFQ,T_SOJUAM,T_BEERAM,T_EAT2,T_EAT3,T_EAT4,T_FRY,T_EXER,T_CHILDNO,BMI, T_SBP, T_DBP, T_HDL, T_LDL, T_SS01, T_SS02, T_SS03, T_SS04, T_SS05, T_SS10, T_SS24),
subset= !is.na(T_LDL) &  !is.na(T_SBP) & !is.na(T_DBP))
nrow(subset_dm)
# 비만, 혈압, 콜레스테롤 정보 get
subset_dm_1 <- subset(subset_dm, select = c(BMI, T_SBP, T_DBP, T_HDL, T_LDL))
is.na(subset_dm_1)
pairs(subset_dm_1)
pcm1 <- prcomp(subset_dm_1, scale=T)
pcm1
summary(pcm1)
par(mfrow=c(1,4))
barplot(pcm1$rotation[,1], main ="PC1", col= c(2,3,4,5,6))  # 종합적으로 당뇨와 관련
barplot(pcm1$rotation[,2], main ="PC2", col= c(2,3,4,5,6))  # HDL, LDL : 음의방향 : 합병증 발생에 기여
barplot(pcm1$rotation[,3], main ="PC3", col= c(2,3,4,5,6))  # BMI, LDL : 강한 음의방향
barplot(pcm1$rotation[,4], main ="PC4", col= c(2,3,4,5,6))  # BMI, HDL : 강한 양의방향, LDL : 음의방향
pairs(subset_dm_1)
par(mfrow=c(1,1))
biplot(pcm1, choices=c(1,2))
biplot(pcm1, choices=c(1,3))
biplot(pcm1, choices=c(1,4))
plot(pcm1, type="l")
screeplot(pcm1, type="l")
subset_dm_1$PC1 <- pcm1$x[,1]
subset_dm_1$PC2 <- pcm1$x[,2]
subset_dm_1$PC3 <- pcm1$x[,3]
plot(pcm1$x[,1], pcm1$x[,2])
lm_pc1 <- lm(data = subset_dm_1, formula = PC1~BMI+T_SBP+T_DBP)
lm_pc2 <- lm(data = subset_dm_1, formula = PC2~BMI+T_HDL+T_LDL)
lm_pc3 <- lm(data = subset_dm_1, formula = PC3~BMI+T_LDL)
summary(lm_pc1) # BMI, T_SBP, T_DBP
summary(lm_pc2) # BMI, T_HDL, T_LDL
summary(lm_pc3) # BMO, T_LDL
subset_dm2 <- subset(dm_data,
select = c(T_DM,T_DMAG,T_DMCU, T_FMFDM1,T_FMFDM2,T_FMFDM3,T_FMFDM4),
subset= !is.na(T_DMAG) &  !is.na(T_DMCU) & !is.na(T_DMCU))
head(subset_dm2)
fal <- factanal(subset_dm2, 4)
fal <- factanal(subset_dm2, 3)
head(subset_dm2)
is.na(subset_dm2)
str(subset_dm2)
fal <- factanal(subset_dm2, 3)
subset_dm2 <- subset(dm_data,
select = c(T_DMAG,T_DMCU, T_FMFDM1,T_FMFDM2,T_FMFDM3,T_FMFDM4),
subset= !is.na(T_DMAG) &  !is.na(T_DMCU) & !is.na(T_DMCU))
head(subset_dm2)
str(subset_dm2)
is.na(subset_dm2)
fal <- factanal(subset_dm2, 3)
fal
library(psych)
library(psych)
fa.parallel(subset_dm2)
fal <- factanal(subset_dm2, 3)
fal
print(fal)
test_data <- read.csv("test.csv", header=T)
head(test_data)
test_data <- na.omit(test_data)
View(test_data)
str(test_data)
dm_subset <- subset(test_data , select= c(T_DM, T_DMAG, T_FMFDM,T_SMK,T_DRIN,T_EXER,T_SS02,T_SS03,T_SS04 ))
wss=c()
for (i in 1:10){
kms=kmeans(dm_subset, i)
wss[i]=sum(kms$withinss)
}
plot(wss, type='b', xlab="Number of Clusters", main="Within-group sum of squares")
wss=c()
for (i in 1:9){
kms=kmeans(dm_subset, i)
wss[i]=sum(kms$withinss)
}
plot(wss, type='b', xlab="Number of Clusters", main="Within-group sum of squares")
plot(wss, type='b', xlab="Number of Clusters", main="Within-group sum of squares")
km1 <- kmeans(dm_subset, 2)
km1
pairs(scale(dm_subset), pch=km1$cluster, col= km1$cluster, ylim=c(-2.5, 3), xlim = c(-2.5, 3))
dm_subset <- subset(test_data , select= c(T_DM, T_DMAG, T_FMFDM,T_SMK,T_DRIN,T_EXER,T_SS02,T_SS03,T_SS04 ))
wss=c()
kms=kmeans(scale(dm_subset), i)
for (i in 1:9){
wss[i]=sum(kms$withinss)
}
plot(wss, type='b', xlab="Number of Clusters", main="Within-group sum of squares")
dm_subset <- subset(test_data , select= c(T_DM, T_FMFDM,T_SMK,T_DRIN,T_EXER,T_SS02,T_SS03,T_SS04 ))
wss=c()
for (i in 1:9){
kms=kmeans(dm_subset, i)
wss[i]=sum(kms$withinss)
}
plot(wss, type='b', xlab="Number of Clusters", main="Within-group sum of squares")
km1 <- kmeans(dm_subset, 2)
km1
pairs(scale(dm_subset), pch=km1$cluster, col= km1$cluster, ylim=c(-2.5, 3), xlim = c(-2.5, 3))
dm_subset <- subset(test_data , select= c(T_DMAG, T_FMFDM,T_SMK,T_DRIN,T_EXER,T_SS02,T_SS03,T_SS04 ))
wss=c()
for (i in 1:9){
kms=kmeans(dm_subset, i)
wss[i]=sum(kms$withinss)
}
plot(wss, type='b', xlab="Number of Clusters", main="Within-group sum of squares")
km1 <- kmeans(dm_subset, 2)
km1
pairs(scale(dm_subset), pch=km1$cluster, col= km1$cluster, ylim=c(-2.5, 3), xlim = c(-2.5, 3))
fal <- factanal(dm_subset, 3)
fal
fa.parallel(dm_subset)
fal <- factanal(dm_subset, 4)
fal
dm_subset <- subset(test_data , select= c(T_DMAG, T_FMFDM,T_SMK,T_SS02,T_SS03,T_SS04 ))
fa.parallel(dm_subset)
fal <- factanal(dm_subset, 4)
fal <- factanal(dm_subset, 3)
fal
dm_subset <- subset(test_data , select= c(T_DMAG, T_FMFDM,T_SMK,T_EXER, T_DRIN ,T_SS02,T_SS03,T_SS04 ))
fa.parallel(dm_subset)
fal <- factanal(dm_subset, 4)
fal
fal$loadings
fal <- factanal(dm_subset, 4, scores = "regression")
fal
fal$scores
dm_subset <- subset(test_data , select= c(T_DMAG, T_FMFDM,T_SMK,T_EXER, T_DRIN ,T_SS02,T_SS03,T_SS04 ), subset = T_DM == 2)
fa.parallel(dm_subset) ## 실행결과 factor 4개로
fal <- factanal(dm_subset, 4, scores = "regression")
fal
wss=c()
for (i in 1:8){
kms=kmeans(dm_subset, i)
wss[i]=sum(kms$withinss)
}
dm_subset <- subset(test_data , select= c(T_DMAG, T_FMFDM,T_SMK,T_EXER, T_DRIN ,T_SS02,T_SS03,T_SS04 ))
fa.parallel(dm_subset) ## 실행결과 factor 4개로
wss=c()
for (i in 1:8){
kms=kmeans(dm_subset, i)
wss[i]=sum(kms$withinss)
}
plot(dm_subset, type='b', xlab="Number of Clusters", main="Within-group sum of squares")
plot(dm_subset, type='b', xlab="Number of Clusters", main="Within-group sum of squares")
wss=c()
for (i in 1:8){
kms=kmeans(dm_subset, i)
wss[i]=sum(kms$withinss)
}
plot(dm_subset, type='b', xlab="Number of Clusters", main="Within-group sum of squares")
dm_subset <- subset(test_data , select= c(T_DMAG, T_FMFDM,T_SMK,T_EXER, T_DRIN ,T_SS02,T_SS03,T_SS04))
wss=c()
for (i in 1:8){
kms=kmeans(dm_subset, i)
wss[i]=sum(kms$withinss)
}
plot(dm_subset, type='b', xlab="Number of Clusters", main="Within-group sum of squares")
plot(wss, type='b', xlab="Number of Clusters", main="Within-group sum of squares")
plot(wss, type='b', xlab="Number of Clusters", main="Within-group sum of squares")
km1
library(ISLR)
str(Default)
head(Default)
dm_subset <- subset(test_data , select= c(T_DMAG, T_FMFDM,T_SMK,T_EXER, T_DRIN ,T_SS02,T_SS03,T_SS04), subset=T_DM==2)
dm_subset <- subset(test_data , select= c(T_DM, T_DMAG, T_FMFDM,T_SMK,T_EXER, T_DRIN ,T_SS02,T_SS03,T_SS04), subset=T_DM==2)
dm_subset$T_DM <- as.factor(dm_subset$T_DM)
boxplot(T_DMAG~T_DM, data=dm_subset)
par(mfrow=c(1,8))
boxplot(T_DMAG~T_DM, data=dm_subset)
boxplot(T_DMAG~T_DM, data=dm_subset)
par(mfrow=c(1,9))
boxplot(T_DMAG~T_DM, data=dm_subset)
par(mfrow=c(3,3))
boxplot(T_DMAG~T_DM, data=dm_subset)
boxplot(T_DMAG~T_DM, data=dm_subset)
boxplot(T_FMFDM~T_DM, data=dm_subset)
boxplot(T_SMK~T_DM, data=dm_subset)
boxplot(T_FMFDM~T_DM, data=dm_subset)
boxplot(T_EXER~T_DM, data=dm_subset)
boxplot(T_DRIN~T_DM, data=dm_subset)
boxplot(T_SS02~T_DM, data=dm_subset)
boxplot(T_SS03~T_DM, data=dm_subset)
par(mfrow=c(2,3))
boxplot(T_DMAG~T_DM, data=dm_subset)
boxplot(T_FMFDM~T_DM, data=dm_subset)
boxplot(T_FMFDM~T_DM, data=dm_subset)
boxplot(T_SMK~T_DM, data=dm_subset)
boxplot(T_EXER~T_DM, data=dm_subset)
boxplot(T_DRIN~T_DM, data=dm_subset)
par(mfrow=c(3,3))
boxplot(T_DMAG~T_DM, data=dm_subset)
boxplot(T_FMFDM~T_DM, data=dm_subset)
boxplot(T_FMFDM~T_DM, data=dm_subset)
boxplot(T_SMK~T_DM, data=dm_subset)
boxplot(T_EXER~T_DM, data=dm_subset)
boxplot(T_DRIN~T_DM, data=dm_subset)
boxplot(T_SS02~T_DM, data=dm_subset)
boxplot(T_SS04~T_DM, data=dm_subset)
boxplot(T_SS03~T_DM, data=dm_subset)
####### 요인분석
par(mfrow=c(1,1))
boxplot(T_DMAG~T_DM, data=dm_subset)
boxplot(T_FMFDM~T_DM, data=dm_subset)
boxplot(T_FMFDM~T_DM, data=dm_subset)
boxplot(T_SMK~T_DM, data=dm_subset)
boxplot(T_EXER~T_DM, data=dm_subset)
boxplot(T_DRIN~T_DM, data=dm_subset)
boxplot(T_SS02~T_DM, data=dm_subset)
boxplot(T_SS03~T_DM, data=dm_subset)
boxplot(T_SS04~T_DM, data=dm_subset)
boxplot(balance~default, data=Default)
dm_subset <- subset(test_data , select= c(T_DM, T_DMAG, T_FMFDM,T_SMK,T_EXER, T_DRIN ,T_SS02,T_SS03,T_SS04))
dm_subset$T_DM <- as.factor(dm_subset$T_DM)
boxplot(T_DMAG~T_DM, data=dm_subset)
boxplot(T_DMAG~T_DM, data=dm_subset)
boxplot(T_FMFDM~T_DM, data=dm_subset)
boxplot(T_FMFDM~T_DM, data=dm_subset)
boxplot(T_SMK~T_DM, data=dm_subset)
boxplot(T_EXER~T_DM, data=dm_subset)
boxplot(T_DRIN~T_DM, data=dm_subset)
boxplot(T_SS02~T_DM, data=dm_subset)
boxplot(T_SS03~T_DM, data=dm_subset)
boxplot(T_SS04~T_DM, data=dm_subset)
boxplot(T_DMAG~T_DM, data=dm_subset)
glm(T_DMAG~T_DM, data=dm_subset, family="binomial")
head(Default)
wss=c()
for (i in 1:10){
kms=kmeans(test_data, i)
wss[i]=sum(kms$withinss)
}
plot(wss, type='b', xlab="Number of Clusters", main="Within-group sum of squares")
test_data <- read.csv("test.csv", header=T)
head(test_data)
test_data <- na.omit(test_data)
str(test_data)
wss=c()
for (i in 1:10){
kms=kmeans(test_data, i)
wss[i]=sum(kms$withinss)
}
plot(wss, type='b', xlab="Number of Clusters", main="Within-group sum of squares")
km1 <- kmeans(test_data, 2)
km1
pairs(scale(cluster_data_sample[,-1]), pch=km1$cluster, col= km1$cluster, ylim=c(-2.5, 3), xlim = c(-2.5, 3))
pairs(scale(test_data), pch=km1$cluster, col= km1$cluster, ylim=c(-2.5, 3), xlim = c(-2.5, 3))
pairs(scale(test_data), pch=km1$cluster, col= km1$cluster, ylim=c(-2.5, 3), xlim = c(-2.5, 3))
pairs(scale(test_data), pch=km1$cluster, col= km1$cluster)
par(mfrow=c(2,2))
pairs(scale(test_data), pch=km1$cluster, col= km1$cluster)
pairs(scale(test_data), pch=km1$cluster, col= km1$cluster)
pairs(scale(test_data), pch=km1$cluster, col= km1$cluster)
pairs(scale(test_data), pch=km1$cluster, col= km1$cluster)
par()
pairs(scale(test_data), pch=km1$cluster, col= km1$cluster)
par(mfrow=c(2,2))
pairs(scale(test_data), pch=km1$cluster, col= km1$cluster)
par(mfrow=c(3,3))
pairs(scale(test_data), pch=km1$cluster, col= km1$cluster)
scale(test_data)
pairs(scale(test_data), pch=km1$cluster, col= km1$cluster)
pairs(test_data, pch=km1$cluster, col= km1$cluster)
test_data$groups <- km1$cluster
head(test_data)
dm_subset <- select(data = test_data, select = c(T_HTNAG, T_FMFHT, T_SMK, T_DRIN, T_EXER,T_SS02,T_SS03, T_SS04 ), subset = c(T_HTN == 2))
dm_subset <- select(data = test_data, select = c(T_HTNAG, T_FMFHT, T_SMK, T_DRIN, T_EXER,T_SS02,T_SS03, T_SS04 ), subset = c(T_HTN == 2))
dm_subset <- subset(data = test_data,  select
= c(T_HTNAG, T_FMFHT, T_SMK, T_DRIN, T_EXER,T_SS02,T_SS03, T_SS04 ), subset = c(T_HTN == 2))
dm_subset <- subset(test_data,
select = c(T_HTNAG, T_FMFHT, T_SMK, T_DRIN, T_EXER,T_SS02,T_SS03, T_SS04 ),
subset= T_HTN == 2)
head(dm_subset)
fa.parallel(dm_subset)
fa.parallel(dm_subset)
fal <- factanal(dm_subset, 4, scores = "regression")
fal
fal$scores
fal$scores[,1]
dm_subset$fa1 <- fal$scores[,1]
dm_subset$fa2 <- fal$scores[,2]
dm_subset$fa3 <- fal$scores[,3]
dm_subset$fa4 <- fal$scores[,4]
head(dm_subset)
fal
fa1_lm <- lm(data= dm_subset, formular = fa1~T_SS02+T_SS03+T_SS04 )
fa1_lm <- lm(data= dm_subset, formula = fa1~T_SS02+T_SS03+T_SS04 )
fa1_lm <- lm(data= dm_subset, formula = fa1~T_SS02+T_SS03+T_SS04 )
fa2_lm <- lm(data= dm_subset, formula = fa2~T_HTNAG+T_FMFHT+T_SS03 )
fa3_lm <- lm(data= dm_subset, formula = fa3~T_SS02+T_SS04 )
fa4_lm <- lm(data= dm_subset, formula = fa4~T_SMK+T_DRIN )
summary(fa1_lm)
summary(fa2_lm)
summary(fa3_lm)
summary(fa4_lm)  # 4번 회귀식 :
fal
fa2_lm <- lm(data= dm_subset, formula = fa2~T_HTNAG )
summary(fa2_lm)  # 2번 회귀식 : 99% 설명 가능
summary(fa1_lm)  # 1번 회귀식 : 98% 설명 가능
summary(fa3_lm)  # 3번 회귀식 : 62% 설명 가능
summary(fa1_lm)  # 1번 회귀식 : 98% 설명 가능
summary(fa2_lm)  # 2번 회귀식 : 99% 설명 가능
summary(fa1_lm)  # 1번 회귀식 : 98% 설명 가능
summary(fa2_lm)  # 2번 회귀식 : 99% 설명 가능
dm_subset[which(dm_subset$T_HTNAG == 100), ] <- 0
unique(dm_subset$T_HTNAG)
fa.parallel(dm_subset) ## 실행결과 factor 4개로
fal <- factanal(dm_subset, 4, scores = "regression")
dm_subset[which(dm_subset$T_HTNAG == 100), ] <- 0
library(psych)
fa.parallel(dm_subset) ## 실행결과 factor 4개로
fal <- factanal(dm_subset, 4, scores = "regression")
dm_subset <- subset(test_data,
select = c(T_HTNAG, T_FMFHT, T_SMK, T_DRIN, T_EXER,T_SS02,T_SS03, T_SS04 ),
subset= T_HTN == 2 & T_HTNAG != 100)
head(dm_subset)
unique(dm_subset$T_HTNAG)
library(psych)
fa.parallel(dm_subset) ## 실행결과 factor 4개로
fal <- factanal(dm_subset, 4, scores = "regression")
fal
fal <- factanal(dm_subset, 4, scores = "regression")
fal
fa.parallel(dm_subset) ## 실행결과 factor 4개로
dm_subset$fa1 <- fal$scores[,1]
dm_subset$fa2 <- fal$scores[,2]
dm_subset$fa3 <- fal$scores[,3]
dm_subset$fa4 <- fal$scores[,4]
head(dm_subset)
fa1_lm <- lm(data= dm_subset, formula = fa1~T_SS02+T_SS03+T_SS04 )
fa2_lm <- lm(data= dm_subset, formula = fa2~T_HTNAG )
fa3_lm <- lm(data= dm_subset, formula = fa3~T_SS02+T_SS04 )
fa4_lm <- lm(data= dm_subset, formula = fa4~T_SMK+T_DRIN )
summary(fa1_lm)  # 1번 회귀식 : 98% 설명 가능
summary(fa2_lm)  # 2번 회귀식 : 99% 설명 가능
summary(fa3_lm)  # 3번 회귀식 : 62% 설명 가능
summary(fa4_lm)  # 4번 회귀식 : 92% 설명 가능
fal <- factanal(dm_subset, 4, scores = "regression", rotation = "none")
fal
fal <- factanal(dm_subset, 4, scores = "regression", rotation = "none")
fal <- factanal(dm_subset, 4,  rotation = "none")
fal <- factanal(dm_subset, 4, scores = "regression",rotation = "none")
fal <- factanal(dm_subset, 4, scores = "regression")
fal
fal <- factanal(dm_subset, 4, scores = "regression")
dm_subset <- subset(test_data,
select = c(T_HTNAG, T_FMFHT, T_SMK, T_DRIN, T_EXER,T_SS02,T_SS03, T_SS04 ),
subset= T_HTN == 2 & T_HTNAG != 100)
head(dm_subset)
unique(dm_subset$T_HTNAG)
fa.parallel(dm_subset) ## 실행결과 factor 4개로
fal <- factanal(dm_subset, 4, scores = "regression")
fal
fal <- factanal(dm_subset, 4, scores = "regression", rotation = "none")
fal
fal2 <- factanal(dm_subset, 4, scores = "regression")
fal2
fal
fal <- factanal(dm_subset, 4, scores = "regression")
fal
pairs(subset_dm_1)
summary(pcm1)
biplot(pcm1, choices=c(1,2))
lm_pc1 <- lm(data = subset_dm_1, formula = PC1~BMI+T_SBP+T_DBP)
lm_pc2 <- lm(data = subset_dm_1, formula = PC2~BMI+T_HDL+T_LDL)
lm_pc3 <- lm(data = subset_dm_1, formula = PC3~BMI+T_LDL)
summary(lm_pc1) # BMI, T_SBP, T_DBP
summary(lm_pc2) # BMI, T_HDL, T_LDL
summary(lm_pc3) # BMO, T_LDL
summary(lm_pc2) # BMI, T_HDL, T_LDL
fa.parallel(dm_subset) ## 실행결과 factor 4개로
dm_subset$fa1 <- fal$scores[,1]
dm_subset$fa2 <- fal$scores[,2]
dm_subset$fa3 <- fal$scores[,3]
dm_subset$fa4 <- fal$scores[,4]
fa1_lm <- lm(data= dm_subset, formula = fa1~T_SS02+T_SS03+T_SS04 )
fa2_lm <- lm(data= dm_subset, formula = fa2~T_HTNAG )
fa3_lm <- lm(data= dm_subset, formula = fa3~T_SS02+T_SS04 )
fa4_lm <- lm(data= dm_subset, formula = fa4~T_SMK+T_DRIN )
summary(fa2_lm)  # 2번 회귀식 : 99% 설명 가능
